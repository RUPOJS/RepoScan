[["0",{"pageContent":"{\n  \"requireCurlyBraces\": [\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"try\",\n    \"catch\"\n  ],\n  \"disallowTrailingWhitespace\": true,\n  \"disallowTrailingComma\": true,\n  \"requireCapitalizedConstructors\": true,    \n  \"requireSpaceAfterKeywords\": [\n    \"if\",\n    \"else\",\n    \"for\",\n    \"while\",\n    \"do\",\n    \"switch\",\n    \"return\",\n    \"try\",\n    \"catch\"\n  ],\n  \"requireSpaceBeforeBinaryOperators\": [\n    \"=\", \"+=\", \"-=\", \"*=\", \"/=\", \"%=\", \"<<=\", \">>=\", \">>>=\",\n    \"&=\", \"|=\", \"^=\", \"+=\",\n\n    \"+\", \"-\", \"*\", \"/\", \"%\", \"<<\", \">>\", \">>>\", \"&\",\n    \"|\", \"^\", \"&&\", \"||\", \"===\", \"==\", \">=\",\n    \"<=\", \"<\", \">\", \"!=\", \"!==\"\n  ],\n  \"requireSpacesInConditionalExpression\": true,\n  \"requireSpaceBeforeBlockStatements\": true\n}","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/.jscs.json","loc":{"lines":{"from":1,"to":35}},"filePath":".jscs.json","complexity":9,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["1",{"pageContent":"Twitter isn't the only company using Flight. We're sure the following list isn't complete, so please let us know if your company should be included, or if you'd like us to feature a link to a blog post or article about how you're using Flight. Or even better, add the links yourself and submit a pull request.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/ADOPTERS.md","loc":{"lines":{"from":1,"to":1}},"filePath":"ADOPTERS.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["2",{"pageContent":"* [zipcar](http://www.zipcar.com)\n* [airbnb](http://nerds.airbnb.com/redesigning-search)\n* [beats music](http://www.beatsmusic.com/)\n* [RetailMeNot](http://www.retailmenot.com/corp/eng/posts/2014/08/28/how-flight-plays-well-with-non-flight-js/)\n* [gumroad](http://blog.gumroad.com/post/47471270406/gumroad-meets-flight)\n* [mixam.uk](https://mixam.co.uk)\n* [yinzcam (for Baltimore Ravens)](http://www.yinzcam.com/apps/nfl/bal)\n* [the martin agency](http://www.martinagency.com)\n* [99 designs](http://99designs.com/)\n* [crashlytics](http://try.crashlytics.com/)\n* [tweetdeck](https://blog.twitter.com/2013/flight-at-tweetdeck)\n* [twitter](https://blog.twitter.com/2013/introducing-flight-a-web-application-framework)\n* [goodvidio](http://www.goodvid.io)\n* [Drip](https://www.getdrip.com)\n* [Codetree](https://codetree.com)\n* [Movebubble](https://www.movebubble.com)\n* [Codevelop](http://codevelop.github.io)\n* [Telemach](https://moj.telemach.si)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/ADOPTERS.md","loc":{"lines":{"from":3,"to":20}},"filePath":"ADOPTERS.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["3",{"pageContent":"* [Codevelop](http://codevelop.github.io)\n* [Telemach](https://moj.telemach.si)\n* [Dailymotion Player](https://www.dailymotion.com/player)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/ADOPTERS.md","loc":{"lines":{"from":19,"to":21}},"filePath":"ADOPTERS.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["4",{"pageContent":"## v1.5.1 (10/6/2015)\n\n* debug.warn like console.log https://github.com/flightjs/flight/commit/70dd4a3\n* Fix component logging in debug mode. https://github.com/flightjs/flight/commit/c741a6a\n* Punctuation fix https://github.com/flightjs/flight/commit/7bb5310\n* Rename define to defineComponent https://github.com/flightjs/flight/commit/65d5b0e\n* Warn on use of defaultAttrs in debug mode https://github.com/flightjs/flight/commit/04fb2eb\n\n## v1.5.0 (1/23/2015)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":1,"to":9}},"filePath":"CHANGELOG.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["5",{"pageContent":"## v1.5.0 (1/23/2015)\n\n* Shows warning for reference types in attributes https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Add Gitter room button https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Remove debug-mode serializable event data restrction https://github.com/flightjs/flight/commit/66164d95e72d26dee1ab39e9edd4f8c26147972c\n* Update Advice API doc for event and data params, multiple advice https://github.com/flightjs/flight/pull/330\n* Document function-in-attributes behaviour https://github.com/flightjs/flight/commit/82a45623f3954e5831503317b0e716b9fe5b8bb1\n\n## v1.4.0 (1/14/2015)\n\n### Features\n\n* New `event.currentTarget` in delegated event handlers https://github.com/flightjs/flight/pull/329\n* npm support â€” `npm install flightjs`\n* Multi-function advice https://github.com/flightjs/flight/pull/299\n\n### Bug fixes and tweaks","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":9,"to":25}},"filePath":"CHANGELOG.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["6",{"pageContent":"### Bug fixes and tweaks\n\n* IE9 debug fix https://github.com/flightjs/flight/pull/318\n* Allow mixing into a null-based object https://github.com/flightjs/flight/pull/323\n* Various documentation & smaller bug fixes\n\n## v1.3.0 (9/22/2014)\n\n###features\n\n* Auto-eval function attributes https://github.com/flightjs/flight/pull/306\n* Enforce JSCS style checker compliance https://github.com/flightjs/flight/pull/291\n* Use webpack to build the standalone library https://github.com/flightjs/flight/pull/272\n* Expose registry on DEBUG global https://github.com/flightjs/flight/pull/298\n* Allow for optional undefined attributes https://github.com/flightjs/flight/pull/310\n* getEnumerableProperty util https://github.com/flightjs/flight/pull/311\n\n###bug fixes and tweaks","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":25,"to":42}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["7",{"pageContent":"###bug fixes and tweaks\n\n* Array optimization in hot code https://github.com/flightjs/flight/pull/276\n* New attributes override works in debug mode https://github.com/flightjs/flight/pull/279\n* Per instance callback unbinding https://github.com/flightjs/flight/pull/282\n* Move index.js to project root https://github.com/flightjs/flight/pull/294\n* Avoid unnecessary clearTimeouts in debounce() https://github.com/flightjs/flight/pull/304\n\n## v1.2.0 (6/20/2014)\n\n###features\n* New `this.attributes()` API for setting attributes\n* Allows override by other mixins\n* Ignores attributes passed by attachedTo unless declared in component\n* Requires null attributes to be overriden\n* Old `this.defaultAttrs` API still works but deprecated\nhttps://github.com/flightjs/flight/pull/150\nhttps://github.com/flightjs/flight/pull/270","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":42,"to":59}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["8",{"pageContent":"###bug fixes and tweaks\n* Optimize Arguments to Array util\nhttps://github.com/flightjs/flight/pull/268\n* Add Component.mixin docs\nhttps://github.com/flightjs/flight/pull/246\n* Fix attribute behavior when using Component.mixin\nhttps://github.com/flightjs/flight/pull/253\nhttps://github.com/flightjs/flight/pull/270\n\n\n## v1.1.4 (4/18/2014)\n\n###features\n* Existing Components can now be extended with `mixin`\nhttps://github.com/flightjs/flight/pull/238\nhttps://github.com/flightjs/flight/pull/242\n\n* Nested event logging\nhttps://github.com/flightjs/flight/pull/244\n\n###bug fixes and tweaks\n\n* No fatal CSP error for accessing storage when cookies are off\nhttps://github.com/flightjs/flight/pull/233\n\n## v1.1.3 (2/18/2014)\n\n###features\n* `on` now optionally accepts an event to trigger instead of a callback\nhttps://github.com/flightjs/flight/pull/217\n\n* logger now shows trigger payload\nhttps://github.com/flightjs/flight/pull/213","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":63,"to":95}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["9",{"pageContent":"* logger now shows trigger payload\nhttps://github.com/flightjs/flight/pull/213\n\n* `getBoundRequests` added to registry as a convenience\nhttps://github.com/flightjs/flight/pull/214\n\n###bug fixes and tweaks\n\n* correct clean-up when 'off' callback is a bound function\nhttps://github.com/flightjs/flight/pull/222\n\n## v1.1.2 (1/14/2014)\n\n###features\n* new `once` util can be used to mimick jQuery's $node.once behavior (PR 186)\n* delegate method now interruptible by calling stopPropagation on the event (PR 202)\n\n###bug fixes and tweaks\n* prevent component.off from closing all event bindings for a given event and node (PR 192)\n* clean up debugger and logger code (PR 193)\n* ensure nested teardown support (PR 194)\n* documentation improvements\n\n## v1.1.1 (10/15/2013)\n\n###features\n* better docs\n\n###bug fixes and tweaks\n* new Function -> function declaration to avoid CSP issues\n* more tests\n* normalize all references to the utils module\n\n## v1.1.0 (07/26/2013)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":94,"to":127}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["10",{"pageContent":"## v1.1.0 (07/26/2013)\n\n##api changes\n* new \\<Component\\> (not recommended) no longer auto-calls initialize\n(use \\<Component\\>.attachTo)\n\n###features\n* core component behavior now in base.js mixin/module\n* using karma for tests\n* refactored documentation now includes api docs\n\n###bug fixes and tweaks\n* update bower resources to match current bower naming scheme\n* tools/debug.js -> lib/debug.js\n\n## v1.0.11 (07/26/2013)\n\n* rollback 1.0.10 due to API changes\n\n## v1.0.10 (07/24/2013)\n\n* becomes v1.1.0 due to API changes\n\n## v1.0.9 (05/13/2013)\n\n###features\n* Event logger now works out-of-the-box\n\n###bug fixes and tweaks\n* Fix logger output\n\n## v1.0.8 (04/23/2013)\n\n###features\n* bower ignores non-useful resources\n\n###bug fixes and tweaks\n* fix purging of event registry when unbinding\n* fix empty componentInfo check in registry\n\n## v1.0.7 (04/02/2013)\n\n###features\n* logging options are now persisted\n\n###bug fixes and tweaks\n* event logging fixed\n\n## v1.0.6 (03/26/2013)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":127,"to":175}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["11",{"pageContent":"###bug fixes and tweaks\n* event logging fixed\n\n## v1.0.6 (03/26/2013)\n\n###features\n* access registry component info more efficiently\n* detect existing instance on attachTo and return without error\n\n###bug fixes and tweaks\n* fix Component.describe\n\n## v1.0.5 (03/19/2013)\n\n###features\n* even faster component initialization\n\n###bug fixes and tweaks\n* add id to component and for fast registry lookup\n* remove array creation for argument munging, for speed and less gc\n* remove unused trigger advice\n* various refactors for performance\n* remove component lifecycle events\n\n## v1.0.4 (03/12/2013)\n\n###features\n* more efficient options->attr merging\n* faster component initialization\n\n###bug fixes and tweaks\n* tighter debug-mode checking\n* remove obsolete component::bind\n\n## v1.0.3 (03/05/2013)\n\n###features\n* tests use require.js\n* remove $.browser dependency (in prep for jQuery.next)\n\n###bug fixes and tweaks\n* return {} if utils.merge has no arguments\n* event logging off by default","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":172,"to":214}},"filePath":"CHANGELOG.md","complexity":7,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["12",{"pageContent":"###bug fixes and tweaks\n* return {} if utils.merge has no arguments\n* event logging off by default\n\n## v1.0.2 (02/15/2013)\n\n###features\n* events can define default behaviour\n\n###bug fixes and tweaks\n* fix null pointer issues with callback exception\n\n## v1.0.1 (02/06/2013)\n\n###bug fixes and tweaks\n* revert to es5-shim 2.0.0 (cross domain issue with IE<9 Object.create shim)\n* fix Travis build script\n* fix unbinding where multiple bindings have same evet and callback\n\n## v1.0.0 (01/30/2013)\n\n* Initial public release.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CHANGELOG.md","loc":{"lines":{"from":212,"to":233}},"filePath":"CHANGELOG.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["13",{"pageContent":"# Contributing to Flight\n\nLooking to contribute something to Flight? Here's how you can help.\n\n\n## Bugs reports\n\nA bug is a _demonstrable problem_ that is caused by the code in the\nrepository. Good bug reports are extremely helpful â€“ thank you!\n\nGuidelines for bug reports:\n\n1. **Use the GitHub issue search** &mdash; check if the issue has already been\n   reported.\n\n2. **Check if the issue has been fixed** &mdash; try to reproduce it using the\n   latest `master` or development branch in the repository.\n\n3. **Isolate the problem** &mdash; ideally create a reduced test\n   case and a live example.\n\n4. Please try to be as detailed as possible in your report. Include specific\n   information about the environment â€“ operating system and version, browser\n   and version, version of Flight â€“ and steps required to reproduce the issue.\n\n\n## Feature requests & contribution enquiries","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CONTRIBUTING.md","loc":{"lines":{"from":1,"to":27}},"filePath":"CONTRIBUTING.md","complexity":5,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["14",{"pageContent":"## Feature requests & contribution enquiries\n\nFeature requests are welcome. But take a moment to find out whether your idea\nfits with the scope and aims of the project. It's up to *you* to make a strong\ncase for the inclusion of your feature. Please provide as much detail and\ncontext as possible.\n\nContribution enquiries should take place before any significant pull request,\notherwise you risk spending a lot of time working on something that we might\nhave good reasons for rejecting.\n\n\n## Pull requests\n\nGood pull requests&mdash;patches, improvements, new features&mdash;are a fantastic\nhelp. They should remain focused in scope and avoid containing unrelated\ncommits.\n\nMake sure to adhere to the coding conventions used throughout the codebase\n(indentation, accurate comments, etc.). Please run `npm test` before you push:\nthis will run the jasmine test suite (using karma runner) and check your syntax\nstyle is consistent with master (using JSCS)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CONTRIBUTING.md","loc":{"lines":{"from":27,"to":48}},"filePath":"CONTRIBUTING.md","complexity":4,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["15",{"pageContent":"Please follow this process; it's the best way to get your work included in the\nproject:\n\n1. [Fork](http://help.github.com/fork-a-repo/) the project, clone your fork,\n   and configure the remotes:\n\n   ```bash\n   # Clone your fork of the repo into the current directory\n   git clone https://github.com/<your-username>/flight\n   # Navigate to the newly cloned directory\n   cd <repo-name>\n   # Assign the original repo to a remote called \"upstream\"\n   git remote add upstream git://github.com/twitter/flight\n   ```\n\n2. If you cloned a while ago, get the latest changes from upstream:\n\n   ```bash\n   git checkout master\n   git pull upstream master\n   ```\n\n3. Install the dependencies (you must have Node.js and [Bower](http://bower.io)\n   installed), and create a new topic branch (off the main project development\n   branch) to contain your feature, change, or fix:\n\n   ```bash\n   npm install\n   bower install\n   git checkout -b <topic-branch-name>\n   ```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CONTRIBUTING.md","loc":{"lines":{"from":50,"to":80}},"filePath":"CONTRIBUTING.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["16",{"pageContent":"```bash\n   npm install\n   bower install\n   git checkout -b <topic-branch-name>\n   ```\n\n4. Make sure to update, or add to the tests when appropriate. Patches and\n   features will not be accepted without tests. Run `make test` to check that\n   all tests pass after you've made changes.\n\n5. Commit your changes in logical chunks. Provide clear and explanatory commit\n   messages. Use Git's [interactive rebase](https://help.github.com/articles/interactive-rebase) feature to tidy up\n   your commits before making them public.\n\n6. Locally merge (or rebase) the upstream development branch into your topic branch:\n\n   ```bash\n   git pull [--rebase] upstream master\n   ```\n\n7. Push your topic branch up to your fork:\n\n   ```bash\n   git push origin <topic-branch-name>\n   ```\n\n8. [Open a Pull Request](https://help.github.com/articles/using-pull-requests/)\n    with a clear title and description.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CONTRIBUTING.md","loc":{"lines":{"from":76,"to":103}},"filePath":"CONTRIBUTING.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["17",{"pageContent":"9. If you are asked to amend your changes before they can be merged in, please\n   use `git commit --amend` (or rebasing for multi-commit Pull Requests) and\n   force push to your remote feature branch. You may also be asked to squash\n   commits.\n\n## License\n\nBy contributing your code,\n\nYou agree to license your contribution under the terms of the MIT License\nhttps://github.com/twitter/flight/blob/master/LICENSE","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/CONTRIBUTING.md","loc":{"lines":{"from":105,"to":115}},"filePath":"CONTRIBUTING.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["18",{"pageContent":"# Please note\n\nFlight is **not under active development**. New pull requests will not be accepted unless they fix core bugs or security issues.\n\n---\n\n# Flight\n\n[![Build Status](https://travis-ci.org/flightjs/flight.png?branch=master)](http://travis-ci.org/flightjs/flight) [![Gitter](https://badges.gitter.im/Join%20chat.svg)](https://gitter.im/flightjs/flight?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[Flight](http://flightjs.github.io/) is a lightweight, component-based,\nevent-driven JavaScript framework that maps behavior to DOM nodes. It was\ncreated at Twitter, and is used by the [twitter.com](https://twitter.com/) and\n[TweetDeck](https://tweetdeck.twitter.com/) web applications.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":1,"to":14}},"filePath":"README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["19",{"pageContent":"* [Website](http://flightjs.github.io/)\n* [API documentation](doc/README.md)\n* [Flight example app](http://flightjs.github.io/example-app/) ([Source](https://github.com/flightjs/example-app))\n* [Flight's Google Group](https://groups.google.com/forum/?fromgroups#!forum/twitter-flight)\n* [Flight on Twitter](https://twitter.com/flightjs)\n* [Flight on Freenode IRC](http://webchat.freenode.net/?channels=flightjs) (#flightjs)\n\n## Example\n\nA simple example of a Flight component.\n\n```js\n/* Component definition */\n\nvar Inbox = flight.component(inbox);\n\nfunction inbox() {\n  this.doSomething = function() { /* ... */ }\n  this.doSomethingElse = function() { /* ... */ }\n\n  // after initializing the component\n  this.after('initialize', function() {\n    this.on('click', this.doSomething);\n    this.on('mouseover', this.doSomethingElse);\n  });\n}\n\n/* Attach the component to a DOM node */\n\nInbox.attachTo('#inbox');\n```\n\n## Installation","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":16,"to":48}},"filePath":"README.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["20",{"pageContent":"/* Attach the component to a DOM node */\n\nInbox.attachTo('#inbox');\n```\n\n## Installation\n\nQuick start using the [pre-built\nlibrary](http://flightjs.github.io/release/latest/flight.min.js) (a\n[UMD](https://github.com/umdjs/umd) bundle). It exposes all of its modules as\nproperties of a global variable, `flight`.\n\n```html\n<!-- jQuery -->\n<script src=\"//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js\"></script>\n<!-- Flight release -->\n<script src=\"http://flightjs.github.io/release/latest/flight.min.js\"></script>\n```\n\nUsing [npm](https://www.npmjs.org/):\n\n```\nnpm install --save flightjs\n```\n\nUsing [Bower](http://bower.io/):\n\n```\nbower install --save flight\n```\n\nYou will have to load [jQuery](http://jquery.com) in your application.\n\n## Why Flight?\n\nFlight is only ~5K minified and gzipped. It's built upon jQuery.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":43,"to":78}},"filePath":"README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["21",{"pageContent":"## Why Flight?\n\nFlight is only ~5K minified and gzipped. It's built upon jQuery.\n\nFlight components are highly portable and easily testable. This is because a\nFlight component (and its API) is entirely decoupled from other components.\nFlight components communicate only by triggering and subscribing to events.\n\nFlight also includes a simple and safe\n[mixin](https://javascriptweblog.wordpress.com/2011/05/31/a-fresh-look-at-javascript-mixins/)\ninfrastructure, allowing components to be easily extended with minimal\nboilerplate.\n\n## Development tools\n\nFlight has supporting projects that provide everything you need to setup,\nwrite, and test your application.\n\n* [Flight generator](https://github.com/flightjs/generator-flight/)\n  Recommended. One-step to setup a Flight-based web app.\n\n* [Flight package generator](https://github.com/flightjs/generator-flight-package/)\n  Recommended. One-step to setup everything you need to write and test a\n  standalone Flight component.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":76,"to":99}},"filePath":"README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["22",{"pageContent":"* [Jasmine Flight](https://github.com/flightjs/jasmine-flight/)\n  Extensions for the Jasmine test framework.\n\n* [Mocha Flight](https://github.com/flightjs/mocha-flight/)\n  Extensions for the Mocha test framework.\n\n## Finding and writing components\n\nYou can browse all the [Flight components](http://flight-components.jit.su)\navailable at this time. They can also be found by searching the Bower registry:\n\n```\nbower search flight\n```\n\nThe easiest way to write a new Flight component is to use the [Flight\npackage generator](https://github.com/flightjs/generator-flight-package/):\n\n```\nyo flight-package foo\n```\n\n## Browser Support\n\nChrome, Firefox, Safari, Opera, IE 7+ (requires [ES5-shim](https://github.com/kriskowal/es5-shim)).\n\n## Quick Overview\n\nHere's a brief introduction to Flight's key concepts and syntax. Read the [API\ndocumentation](doc) for a comprehensive overview.\n\n### Components ([API](doc/component_api.md))","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":101,"to":132}},"filePath":"README.md","complexity":4,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["23",{"pageContent":"### Components ([API](doc/component_api.md))\n\n- A Component is nothing more than a constructor with properties mixed into its prototype.\n- Every Component comes with a set of basic functionality such as event handling and component registration.\n(see [Base API](doc/base_api.md))\n- Additionally, each Component definition mixes in a set of custom properties which describe its behavior.\n- When a component is attached to a DOM node, a new instance of that component is created. Each component\ninstance references the DOM node via its `node` property.\n- Component instances cannot be referenced directly; they communicate with other components via events.\n\n### Interacting with the DOM\n\nOnce attached, component instances have direct access to their node object via the `node` property. (There's\nalso a jQuery version of the node available via the `$node` property.)\n\n### Events in Flight","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":132,"to":147}},"filePath":"README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["24",{"pageContent":"### Events in Flight\n\nEvents are how Flight components interact. The Component prototype supplies methods for triggering events as\nwell as for subscribing to and unsubscribing from events. These Component event methods are actually just convenient\nwrappers around regular event methods on DOM nodes.\n\n### Mixins ([API](doc/mixin_api.md))\n\n- In Flight, a mixin is a function which assigns properties to a target object (represented by the `this`\nkeyword).\n- A typical mixin defines a set of functionality that will be useful to more than one component.\n- One mixin can be applied to any number of [Component](#components) definitions.\n- One Component definition can have any number of mixins applied to it.\n- Each Component defines a [*core*](#core_mixin) mixin within its own module.\n- A mixin can itself have mixins applied to it.\n\n### Advice ([API](doc/advice_api.md))\n\nIn Flight, advice is a mixin (`'lib/advice.js'`) that defines `before`, `after` and `around` methods.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":147,"to":165}},"filePath":"README.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["25",{"pageContent":"These can be used to modify existing functions by adding custom code. All Components have advice mixed in to\ntheir prototype so that mixins can augment existing functions without requiring knowledge\nof the original implementation. Moreover, since Components are seeded with an empty `initialize` method,\nComponent definitions will typically use `after` to define custom `initialize` behavior.\n\n### Debugging ([API](doc/debug_api.md))\n\nFlight ships with a debug module which can help you trace the sequence of event triggering and binding. By default\nconsole logging is turned off, but you can log `trigger`, `on` and `off` events by means of the following console\ncommands.\n\n## Authors\n\n+ [@angus-c](http://github.com/angus-c)\n+ [@danwrong](http://github.com/danwrong)\n+ [@kpk](http://github.com/kennethkufluk)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":167,"to":182}},"filePath":"README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["26",{"pageContent":"Thanks for assistance and contributions:\n[@sayrer](https://github.com/sayrer),\n[@shinypb](https://github.com/shinypb),\n[@kloots](https://github.com/kloots),\n[@marcelduran](https://github.com/marcelduran),\n[@tbrd](https://github.com/tbrd),\n[@necolas](https://github.com/necolas),\n[@fat](https://github.com/fat),\n[@mkuklis](https://github.com/mkuklis),\n[@jrburke](https://github.com/jrburke),\n[@garann](https://github.com/garann),\n[@WebReflection](https://github.com/WebReflection),\n[@coldhead](https://github.com/coldhead),\n[@paulirish](https://github.com/paulirish),\n[@nimbupani](https://github.com/nimbupani),\n[@mootcycle](https://github.com/mootcycle).\n\nSpecial thanks to the rest of the Twitter web team for their abundant\ncontributions and feedback.\n\n## License\n\nCopyright 2013 Twitter, Inc and other contributors.\n\nLicensed under the MIT License","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/README.md","loc":{"lines":{"from":184,"to":208}},"filePath":"README.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["27",{"pageContent":"{\n  \"name\": \"flight\",\n  \"description\": \"Clientside component infrastructure\",\n  \"main\": \"index.js\",\n  \"version\": \"1.5.1\",\n  \"ignore\": [\n    \".*\",\n    \"doc\",\n    \"test\",\n    \"CHANGELOG.md\",\n    \"CONTRIBUTING.md\",\n    \"Makefile\",\n    \"karma.conf.js\",\n    \"package.json\",\n    \"webpack.conf.js\"\n  ],\n  \"dependencies\": {\n    \"jquery\": \">=1.8.0\"\n  }\n}","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/bower.json","loc":{"lines":{"from":1,"to":20}},"filePath":"bower.json","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["28",{"pageContent":"# Flight API documentation","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/README.md","loc":{"lines":{"from":1,"to":1}},"filePath":"doc/README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["29",{"pageContent":"* [Advice API](advice_api.md)\n  * [this.before](advice_api.md#this.before)\n  * [this.after](advice_api.md#this.after)\n  * [this.around](advice_api.md#this.around)\n  * [flight.advice.withAdvice](advice_api.md#advice.withAdvice)\n* [Base API](base_api.md)\n  * [this.attributes](base_api.md#this.attributes)\n  * [this.select](base_api.md#this.select)\n  * [this.initialize](base_api.md#this.initialize)\n  * [this.on](base_api.md#this.on)\n  * [this.off](base_api.md#this.off)\n  * [this.trigger](base_api.md#this.trigger)\n  * [this.teardown](base_api.md#this.teardown)\n* [Component API](component_api.md)\n  * [flight.component](component_api.md#defineComponent)\n  * [flight.component.teardownAll](component_api.md#defineComponent.teardownAll)\n  * [Component.attachTo](component_api.md#Component.attachTo)\n  * [Component.teardownAll](component_api.md#Component.teardownAll)\n* [Debug API](debug_api.md)\n* [Mixin API](mixin_api.md)\n* [Utilities API](utils_api.md)\n  * [compose](utils_api.md#utils.compose)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/README.md","loc":{"lines":{"from":3,"to":24}},"filePath":"doc/README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["30",{"pageContent":"* [Utilities API](utils_api.md)\n  * [compose](utils_api.md#utils.compose)\n  * [countThen](utils_api.md#utils.countThen)\n  * [debounce](utils_api.md#utils.debounce)\n  * [delegate](utils_api.md#utils.delegate)\n  * [isDomObj](utils_api.md#utils.isDomObj)\n  * [isEnumerable](utils_api.md#utils.isEnumerable)\n  * [merge](utils_api.md#utils.merge)\n  * [push](utils_api.md#utils.push)\n  * [throttle](utils_api.md#utils.throttle)\n  * [toArray](utils_api.md#utils.toArray)\n  * [uniqueArray](utils_api.md#utils.uniqueArray)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/README.md","loc":{"lines":{"from":23,"to":34}},"filePath":"doc/README.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["31",{"pageContent":"# Advice API\n\nIn Flight, `advice` is a mixin (`lib/advice.js`) that defines `before`, `after`\nand `around` methods.\n\nThese can be used to modify existing functions by adding custom code. All\nComponents have advice mixed in to their prototype so that mixins can augment\nexisting functions without requiring knowledge of the original implementation.\nMixins will typically use the `after` method to define custom `initialize`\nbehavior for the target component.\n\n<a name=\"this.before\"></a>\n## this.before(existingFuncName, customFunc)\n\nRun the `customFunc` function before the `existingFunc` function.\n\n#### `existingFuncName`: String\n\nThe name of the existing function (`existingFunc`) you want to augment.\n\n#### `customFunc`: Function\n\nThe function to be invoked before `existingFunc`.\n\n```js\nfunction withDrama() {\n  this.before('announce', function() {\n    clearThroat();\n  });\n}\n\nreturn withDrama;\n```\n\n<a name=\"this.after\"></a>\n## this.after(existingFuncName, customFunc)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/advice_api.md","loc":{"lines":{"from":1,"to":36}},"filePath":"doc/advice_api.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["32",{"pageContent":"return withDrama;\n```\n\n<a name=\"this.after\"></a>\n## this.after(existingFuncName, customFunc)\n\nRun the `customFunc` function after the `existingFunc` function.\n\n#### `existingFuncName`: String\n\nThe name of the existing function (`existingFunc`) you want to augment.\n\n#### `customFunc`: Function\n\nThe function to be invoked after `existingFunc`.\n\n```js\nfunction withDrama() {\n  this.after('leaving', function() {\n    slamDoor();\n  });\n}\n\nreturn withDrama;\n```\n\n<a name=\"this.around\"></a>\n## this.around(existingFuncName, customFunc)\n\nRun the `existingFunc` function in the middle of the `customFunc` function. It's\nsimilar to [underscore](http://underscorejs.org/)'s `_wrap` function).\n\n#### `existingFuncName`: String\n\nThe name of the existing function (`existingFunc`) you want to augment.\n\n#### `customFunc`: Function\n\nThe function to wrap around `existingFunc`. The `existingFunc` function will be\npassed to `customFunc` as an argument.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/advice_api.md","loc":{"lines":{"from":32,"to":71}},"filePath":"doc/advice_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["33",{"pageContent":"The existing function is passed to the custom function as an argument so that\nit can be referenced. If the custom function does not call the existing\nfunction then it will replace that function instead of surrounding it:\n\n```js\nfunction withDrama() {\n  this.around('announce', function(basicAnnounce) {\n    clearThroat();\n    basicAnnounce();\n    bow();\n  });\n}\n\nreturn withDrama;\n```\n\n<a name=\"notes\"></a>\n## Additional notes on using Advice\n\n### Retrieving event data\n\nIn the above examples, the jQuery event and payload that will be passed to the `existingFunc` are available as extra parameters to the `customFunc` callback, respectively. This can be especially useful for calling `existingFunc` with the original arguments when using `this.around`:\n\n```js\nfunction withMelodiousHumour() {\n  this.around('yodel', function(func, event, data) {\n    if (data.tune) {\n      func(event, data); // event.type == 'yodel'\n    }\n  });\n}\n\nreturn withMelodiousHumour;\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/advice_api.md","loc":{"lines":{"from":73,"to":106}},"filePath":"doc/advice_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["34",{"pageContent":"return withMelodiousHumour;\n```\n\nIn the above example, `yodel` will never be called if `data.tune` is missing.\n\n### Shorthand for multiple advices\n\nAdvice can be applied to multiple functions at once by listing more than one (space-separated) function names in the `existingFuncName` parameter. This can be used to club together common tasks on related methods:\n\n```js\nfunction withSoundCheck() {\n  this.before('announce yodel trumpet', function (event, data) {\n    checkOneTwo();\n  });\n}\n\nreturn withSoundCheck;\n```\n\n<a name=\"advice.withAdvice\"></a>\n## Making advice available to regular objects\n\nAdvice can be mixed in to non-components using the compose module:\n\n```js\n// a simple module: 'test/myObj'\n\nvar myObj = {\n  print: function() {\n    console.log(\"hello\");\n  }\n};\n\nreturn myObj;\n```\n\n```js\n// import myObj and augment it\n\nvar flight = require('flightjs');\nvar myObj = require('test/myObj');\n\n// add advice functions to myObj\nflight.advice.withAdvice.call(myObj);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/advice_api.md","loc":{"lines":{"from":105,"to":148}},"filePath":"doc/advice_api.md","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["35",{"pageContent":"// add advice functions to myObj\nflight.advice.withAdvice.call(myObj);\n\n// augment print function\nmyObj.after('print', function() {\n  console.log('world');\n});\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/advice_api.md","loc":{"lines":{"from":147,"to":154}},"filePath":"doc/advice_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["36",{"pageContent":"# Base API\n\nThe base API shared by Flight [components](component_api.md) and\n[mixins](mixin_api.md).\n\n<a name=\"this.attributes\"></a>\n## this.attributes(object)\n\nMost Components and Mixins need to define attributes. In Flight, default values\nare assigned by passing an object to the `attributes` function.\n\n```js\nfunction Button() {\n  this.attributes({\n    buttonClass: 'js-button',\n    text: 'Click me',\n    hoverClass: null\n  });\n}\n```\n\nThis defines a set of attributes that the mixin makes use of. If you define a\nvalue it serves as a default value in the case that it's not specified in the\n`attachTo` call. If you give it a value of `null` it means that this value must\nbe specified in the `attachTo` call and will raise an error if the value is\nmissing.\n\nFor instance, this would raise an error because `hoverClass` is not defined:\n\n```js\nButton.attachTo('#foo', {\n  text: 'Don\\'t click me',\n  buttonClass: 'js-not-a-button'\n});\n```\n\nSpecifying `hoverClass` would correct this:","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":1,"to":37}},"filePath":"doc/base_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["37",{"pageContent":"Specifying `hoverClass` would correct this:\n\n```js\nButton.attachTo('#foo', {\n  text: 'Don\\'t click me',\n  buttonClass: 'js-not-a-button',\n  hoverClass: 'hover'\n});\n```\n\nMixins can be used to override the default values of attributes specified in\nother mixins or to add new attributes. If you pass an attribute value into\n`attachTo` but it is not defined via `this.attributes` it will be ignored.\n\nAttributes can be accessed accordingly:\n\n```js\nthis.attr.buttonClass;\n```\n\nAttributes are immutable. In debug mode Flight will raise errors if you try to\nset them after `attachTo` has been called.\n\n*NOTE: `this.attributes` replaces the now deprecated `this.defaultAttrs`.\nHowever, for backwards compatibility, if you are using `this.defaultAttrs` then\nall the old attribute behavior remains in place. [More details on\n`this.defaultAttrs`](../../v1.1.3/doc/base_api.md#this.defaultAttrs)*\n\nYou may pass a function to `this.attributes` to generate an attribute when the component is initialised.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":37,"to":65}},"filePath":"doc/base_api.md","complexity":4,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["38",{"pageContent":"```js\nthis.attributes({\n  attachTime: function () {\n    return new Date();\n  }\n});\n```\n\n<a name=\"this.select\"></a>\n## this.select(attr)\n\nThe `select` method takes an `attr` key as its argument. The value of the\n`attr` must be a CSS Selector. The method will return all matching elements\nwithin the component's `node`.\n\nThis is a handy alternative to jQuery's `this.$node.find()` and prevents\naccidental access to elements outside of the component's `node`.\n\n```js\nthis.attributes({\n  menuItemSelector: '.menu-item',\n});\n\nthis.selectMenuItem = function(e) {\n  this.select('menuItemSelector')\n};\n```\n\n<a name=\"this.initialize\"></a>\n## this.initialize()\n\nThis method is attached to the prototype of every Component; it accepts the\ncomponent's node and an `options` object as arguments. The core implementation,\nwhich is called every time an instance is created, will assign the node to the\ninstance and override the default `attr`s with the `options` object.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":67,"to":101}},"filePath":"doc/base_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["39",{"pageContent":"Components and Mixins will typically augment the core implementation by\nsupplying a function as an argument to the `after` method (see the [advice\nAPI](advice_api.md) for more information). This is a good place to set up event\nlisteners that bind to callbacks.\n\n```js\nthis.after('initialize', function() {\n  this.on('click', this.handleClick);\n});\n```\n\n<a name=\"this.on\"></a>\n## this.on([selector,] eventType, handler)\n\nThis allows a component instance to listen to an event and register a callback\nto be invoked. Flight will automatically bind the context (`this`) of the\ncallback to the component instance.\n\n#### `selector`: String | Element | Element collection\n\nOptional. Specify the DOM node(s) that should listen for the event. Defaults\nto the component instance's `node` value.\n\n#### `eventType`: String\n\nThe event type to listen for.\n\n#### `handler`: Function | Object | String","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":103,"to":130}},"filePath":"doc/base_api.md","complexity":4,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["40",{"pageContent":"The event type to listen for.\n\n#### `handler`: Function | Object | String\n\nEither a function (callback) to be invoked, a map of targets and callbacks, or\na string (event name) to be triggered.\n\nExample of `handler` being a function:\n\n```js\nthis.after('initialize', function() {\n  this.on(document, 'dataSent', this.refreshList);\n  this.on('click', this.selectItem);\n});\n```\n\nExample of `handler` as an inline function (this demonstrates how the `ev` and\n`data` parameters can be used to receive data from the component's optional\n`trigger` parameter `eventPayload`):\n\n```js\nthis.on(document, 'dataSent', function (ev, data) {\n  alert('Message sent: ' + data.msg);\n});\n```\n\nExample of `handler` being an object that maps event targets to callbacks.\nThis is effectively event delegation; selector values are resolved, at event\ntime, by keying into the `attr` property of the component. The target element\nis exposed in the handler's data payload as `el`.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":128,"to":157}},"filePath":"doc/base_api.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["41",{"pageContent":"```js\nthis.attributes({\n  menuItemSelector: '.menuItem',\n  saveButtonSelector: '#save'\n});\n\nthis.after('initialize', function() {\n  this.on('click', {\n    menuItemSelector: this.selectMenuItem,\n    saveButtonSelector: this.saveAll\n  });\n});\n```\n\nExample of `handler` being a string that maps events to other events. This is\nuseful for proxying browser events to more meaningful custom events.\n\n```js\nthis.on('click', 'uiComponentClick');\n```\n\nExample of `handler` being an object that maps events to other events.\n\n```js\nthis.attributes({\n  menuItemSelector: '.menuItem',\n  saveButtonSelector: '#save'\n});\n\nthis.after('initialize', function() {\n  this.on('click', {\n    menuItemSelector: 'uiMenuItemClick',\n    saveButtonSelector: 'uiSaveButtonClick'\n  });\n});\n```\n\n<a name=\"this.off\"></a>\n## this.off([selector,] eventType [, handler])\n\nIf we no longer want a component instance to listen to an event we can use the\n`off` method to unsubscribe.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":159,"to":200}},"filePath":"doc/base_api.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["42",{"pageContent":"#### `selector`: String | Element | Element collection\n\nOptional. The DOM node(s) listening for the event.\nDefaults to the component instance's `node` value.\n\n#### `eventType`: String | Object\n\nThe event type being listened to.\n\n#### `handler`: Function | Object\n\nOptional. The function (callback) to detach from the component instance.\nDefaults to the detaching all callbacks for the event.\n\n```js\nfunction disableAllDropdowns() {\n  this.off('#select', 'click');\n}\n\nfunction noHighlightOnHover() {\n  this.off('hover', this.highlight);\n}\n```\n\nNote: when a component is torn down, it automatically unsubscribes from all\nevents.\n\n<a name=\"this.trigger\"></a>\n## this.trigger([selector,] eventType [, eventPayload])\n\nTrigger an event.\n\n#### `selector`: String | Element | Element collection\n\nOptional. The DOM node(s) that the event will be dispatched to.\nDefaults to the component instance's `node` value.\n\n#### `eventType`: String | Object\n\nString. The event type to be triggered.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":202,"to":241}},"filePath":"doc/base_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["43",{"pageContent":"#### `eventType`: String | Object\n\nString. The event type to be triggered.\n\nYou can also specify a default function that will be called by the component,\nproviding that nothing in the event's bubble chain invokes `preventDefault`.\nDefault functions in custom events are analagous to the default actions of\nnative events.\n\nTo define a default function, make the `eventType` argument an object that\nspecifies the event's `type` and a `defaultBehavior` property. A common use\ncase is defining default behavior for keyboard events:\n\n```js\nthis.trigger('#textInput', {\n  type: 'escapePressed',\n  defaultBehavior: this.blur\n});\n```\n\n#### `eventPayload`: Object\n\nThis is the payload of data that accompanies the event.\n\n```js\nthis.saveButtonClicked = function() {\n  this.trigger('saveRequested', currentDocument);\n}\n\nthis.updateSuccessful = function() {\n  this.trigger(document, 'transactionComplete', successData);\n}\n```\n\n<a name=\"this.teardown\"></a>\n## this.teardown()","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":239,"to":274}},"filePath":"doc/base_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["44",{"pageContent":"<a name=\"this.teardown\"></a>\n## this.teardown()\n\nRemove a component instance and its event bindings.\n\nIt's a good idea to teardown components after each unit test - and teardown is\nalso good for unbinding event listeners when, for example, the user navigates\naway from a page.\n\n```js\nthis.closeVideoWidget = function() {\n  // remove this component instance and its event bindings\n  this.teardown();\n};\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/base_api.md","loc":{"lines":{"from":273,"to":287}},"filePath":"doc/base_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["45",{"pageContent":"# Component API\n\nThe [base API](base_api.md) is mixed into the Component prototype.\n\n## What is a Component?\n\nA Component is just a constructor with properties mixed into its prototype. It\ncomes with a set of basic functionality such as event handling and Component\nregistration.\n\nEach Component _definition_ mixes in a set of custom properties which describe\nits behavior.\n\nWhen a Component is attached to a DOM node, a new instance of that Component is\ncreated. Each Component instance references the DOM node via its `node`\nproperty.\n\n**A Component instance cannot be referenced directly**; it communicates with\nother components via events.\n\n<a name=\"defineComponent\"></a>\n## flight.component(...)\n\n`flight.component` accepts any number of [mixin](mixin_api.md) functions and\nreturns a new Component constructor with those mixins applied to its prototype.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/component_api.md","loc":{"lines":{"from":1,"to":25}},"filePath":"doc/component_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["46",{"pageContent":"Each Component definition should include a function declaration describing its\nbasic behavior (we can think of this function as the Component's core mixin).\nBy passing this function to `defineComponent` we can define a simple\nComponent:\n\n```js\n/* my_simple_component.js */\n\nvar flight = require('flightjs');\nvar withMyMixin = require('with_my_mixin');\n\nmodule.exports = flight.component(mySimpleComponent, withMyMixin);\n\n// this Component's custom properties\nfunction mySimpleComponent() {\n  this.doSomething = function() {\n    //...\n  };\n\n  this.doSomethingElse = function() {\n    //...\n  };\n}\n```\n\nComponents make no assumptions about the existence of other objects. If you\nwere to remove all other JavaScript on the site, this Component would still\nwork as intended.\n\n<a name=\"flight.component.teardownAll\"></a>\n## flight.component.teardownAll()","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/component_api.md","loc":{"lines":{"from":27,"to":57}},"filePath":"doc/component_api.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["47",{"pageContent":"<a name=\"flight.component.teardownAll\"></a>\n## flight.component.teardownAll()\n\nOn `flight.component` (i.e., the object exported by `lib/component`) this\nmethod deletes every instance of every Component and all their event\nbindings.\n\n```js\nvar flight = require('flightjs');\n\nmodule.exports = flight.component(navigationMenu);\n\nfunction navigationMenu() {\n  this.resetEverything = function() {\n    // remove every component instance and all event listeners\n    flight.component.teardownAll();\n  };\n\n  // ...\n}\n```\n\n<a name=\"Component.attachTo\"></a>\n## Component.attachTo(selector[, options])\n\nCreate a new instance of a Component and attach it to a DOM node.\n\n#### `selector`: String | Element | Element collection\n\nSpecify the DOM node(s) that this Component should be attached to. A new\nComponent instance will be created for each node.\n\n#### `options`: Object","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/component_api.md","loc":{"lines":{"from":56,"to":88}},"filePath":"doc/component_api.md","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["48",{"pageContent":"#### `options`: Object\n\nOptional. An object that will be merged into the component's default `attr` object\nvia the `initialize` method. Any additional arguments are merged into the first `options`\nargument.\n\nIn the example below, we are creating an instance of an \"inbox\" Component and\nattaching it to a node with id `inbox`. We're also passing in values for a\ncouple of selectors which will override the values defined in the Component's\n`attr` object (if they exist).\n\n```js\n/* attach an inbox component to a node with id 'inbox'*/\n\nvar Inbox = require('components/inbox');\n\nInbox.attachTo('#inbox', {\n  'nextPageSelector': '#nextPage',\n  'previousPageSelector': '#previousPage',\n});\n```\n\nIt's important to understand that `attachTo` does not return the new instance,\nor any other value. You should never need a reference to Component instances -\nthey should only respond to events.\n\n### Interacting with the DOM","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/component_api.md","loc":{"lines":{"from":88,"to":114}},"filePath":"doc/component_api.md","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["49",{"pageContent":"### Interacting with the DOM\n\nOnce attached, Component instances have direct access to their node object via\nthe `node` property. (There's also a jQuery version of the node available via\nthe `$node` property.)\n\n```js\nthis.setId = function(n) {\n  this.node.id = n;\n};\n\nthis.hideComponent = function() {\n  this.$node.hide();\n};\n```\n\n<a name=\"Component.teardownAll\"></a>\n## Component.teardownAll()\n\nOn a Component constructor this method deletes every instance of that Component\ntype and all their event bindings.\n\n```js\nvar NavigationMenu = require('ui/navigationMenu');\n\n// ...\n// remove all instances of NavigationMenu and all their event bindings\nNavigationMenu.teardownAll();\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/component_api.md","loc":{"lines":{"from":114,"to":142}},"filePath":"doc/component_api.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["50",{"pageContent":"# Debug API\n\nFlight ships with a debug module which can help you trace the sequence of event\ntriggering and binding. By default console logging is turned off, but you can\n log `trigger`, `on` and `off` events by means of the following console\ncommands:\n\n```js\n// log everything\nDEBUG.events.logAll();\n// only log event triggers\nDEBUG.events.logByAction('trigger');\n// only log events named 'click' - accepts `*` as wildcard\nDEBUG.events.logByName('click');\n// log nothing\nDEBUG.events.logNone();\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/debug_api.md","loc":{"lines":{"from":1,"to":17}},"filePath":"doc/debug_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["51",{"pageContent":"# Mixin API\n\n- In Flight, a mixin is a function which assigns properties to a target object (represented by the `this`\nkeyword).\n- A typical mixin defines a set of functionality that will be useful to more than one component.\n- One mixin can be applied to any number of [Component](component_api.md) definitions.\n- One Component definition can have any number of mixins applied to it.\n- Each Component defines a [*core*](#core_mixin) mixin within its own module.\n- A mixin can itself have mixins applied to it.\n\n## How do I define a mixin?\n\nMixin definitions are like Component definitions but without the call to\n`flight.component`.\n\n```js\nfunction withDropdown() {\n  this.openDropdown = function() {\n    //...\n  };\n  this.selectItem = function() {\n    //...\n  };\n}\n\n// export the mixin function\nmodule.exports = withDropdown;\n```\n\n## How do I apply mixins to a component?\n\nIn the Component definition, pass the required mixins as arguments to the\n`flight.component` function:","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/mixin_api.md","loc":{"lines":{"from":1,"to":33}},"filePath":"doc/mixin_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["52",{"pageContent":"```js\nvar flight = require('flightjs');\nvar withDialog = require('mixins/with_dialog');\nvar withDropdown = require('mixins/with_dropdown');\n\nmodule.exports = flight.component(fancyComponent, withDialog, withDropdown);\n\nfunction fancyComponent() {\n  //...\n}\n```\n\n## How do I apply mixins to a regular object?\n\nUnder the covers, Components add mixins using Flight's `compose` module, which\namongst other things, prevents mixins from clobbering existing method names. If\nyou ever need to apply a mixin to something other than a component (e.g. to\nanother mixin), you can invoke `compose.mixin` directly:\n\n```js\nvar flight = require('flightjs');\nvar withPositioning = require('mixins/with_positioning');\n\nfunction withDialog() {\n  //mix withPositioning into withDialog\n  flight.compose.mixin(this, [withPositioning]);\n\n  //...\n}\n\n// export the mixin function\nmodule.exports = withDialog;\n```\n\n## Overriding defaults in a mixin","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/mixin_api.md","loc":{"lines":{"from":35,"to":69}},"filePath":"doc/mixin_api.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["53",{"pageContent":"// export the mixin function\nmodule.exports = withDialog;\n```\n\n## Overriding defaults in a mixin\n\nThe `attributes` method is available to both component and mixin modules. When\nused with mixins it will not overwrite attributes already defined in the\ncomponent module.\n\n```js\n/* mixins/big_button */\n\nfunction bigButton() {\n  this.attributes({\n    buttonClass: 'js-button-big'\n  });\n}\n\nmodule.exports = bigButton;\n```\n\n## Creating a new Component from an existing one\n\nExisting Components can act as base components from which additional Components can\nbe made.\n\nFor example, let's say all your components need to implement some touch screen behavior and also\noverride Flight's default `trigger` function. Instead of having to add these mixins to every component,\nyou can use them to create a base component (`components/base`) which all other components will extend.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/mixin_api.md","loc":{"lines":{"from":65,"to":94}},"filePath":"doc/mixin_api.md","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["54",{"pageContent":"```js\nvar flight = require('flightjs');\nvar withTouchScreen = require('mixins/with_touchscreen');\nvar withCustomTrigger = require('mixins/with_custom_trigger');\n\nmodule.exports = flight.component(withTouchScreen, withCustomTrigger);\n```\n\nComponent constructors have a `mixin` method which can be used to create a new Component constructor\nbased on the original:\n\n```js\nvar Base = require('components/base');\n\nmodule.exports = Base.mixin(shoppingCart);\n\nfunction shoppingCart() {\n  //..\n}\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/mixin_api.md","loc":{"lines":{"from":96,"to":115}},"filePath":"doc/mixin_api.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["55",{"pageContent":"# Utilities API\n\nUtilities available with the `utils` modules.\n\n<a name=\"utils.compose\"></a>\n## utils.compose(fn1, fn2, ...)\n\nBuild a function from other function(s)\n\n```js\nutils.compose(a,b,c) -> a(b(c()));\n```\n\n<a name=\"utils.countThen\"></a>\n## utils.countThen(num, base)\n\nReturns a function that will call `base` (with the given arguments) after it has been called `num` times\n\n<a name=\"utils.debounce\"></a>\n## utils.debounce(func, wait, immediate)\n\nCreates and returns a new debounced version of the passed function which will\npostpone its execution until after `wait` milliseconds have elapsed since the\nlast time it was invoked.\n\nPass `true` for the immediate parameter to cause debounce to trigger the\nfunction on the leading instead of the trailing edge of the `wait` interval.\n\n<a name=\"utils.delegate\"></a>\n## utils.delegate(rules)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/utils_api.md","loc":{"lines":{"from":1,"to":30}},"filePath":"doc/utils_api.md","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["56",{"pageContent":"<a name=\"utils.delegate\"></a>\n## utils.delegate(rules)\n\nDelegate to event handlers based on the event target. The `rules` argument is an object who's keys represent keys\nin the component's `attr` object (resolving to the selector of the event target) and values are the handler to be\ncalled.\n\nThe handlers are lazily resolved when the event is fired.\n\n<a name=\"utils.isDomObj\"></a>\n## utils.isDomObj(obj)\n\nDetect if an object is a DOM node.\n\n<a name=\"utils.getEnumerableProperty\"></a>\n## utils.getEnumerableProperty(obj, key)\n\nIf obj.key points to an enumerable property, return its value\nIf obj.key points to a non-enumerable property, return undefined\n\n<a name=\"utils.merge\"></a>\n## utils.merge(obj1, obj2, ... [, deepClone])\n\nReturns new object representing multiple objects merged together.\nOptional final argument is boolean which specifies if merge is recursive.\nOriginal objects are unmodified.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/utils_api.md","loc":{"lines":{"from":29,"to":54}},"filePath":"doc/utils_api.md","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["57",{"pageContent":"```js\nvar base = {a:2, b:6};\nvar extra = {b:3, c:4};\nmerge(base, extra); // {a:2, b:3, c:4}\nbase; // {a:2, b:6}\n\nvar base = {a:2, b:6};\nvar extra = {b:3, c:4};\nvar extraExtra = {a:4, d:9};\nmerge(base, extra, extraExtra); // {a:4, b:3, c:4. d: 9}\nbase; // {a:2, b:6}\n\nvar base = {a:2, b:{bb:4, cc:5}};\nvar extra = {a:4, b:{cc:7, dd:1}};\nmerge(base, extra, true); // {a:4, b:{bb:4, cc:7, dd:1}}\nbase; // {a:2, b:{bb:4, cc:5}}\n```\n\n<a name=\"utils.push\"></a>\n## utils.push(base, extra [, protect])\n\nUpdates base in place by copying properties of extra to it.\nOptionally clobber protected.\n\n```js\nvar base = {a:2, b:6};\nvar extra = {c:4};\npush(base, extra); // {a:2, b:6, c:4}\nbase; // {a:2, b:6, c:4}\n\nvar base = {a:2, b:6};\nvar extra = {b:4, c:4};\npush(base, extra, true); // Error (\"utils.push attempted to overwrite 'b' while running in protected mode\")\nbase; // {a:2, b:6}\n```\n\nObjects with the same key will merge recursively when protect is `false`.","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/utils_api.md","loc":{"lines":{"from":56,"to":92}},"filePath":"doc/utils_api.md","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["58",{"pageContent":"Objects with the same key will merge recursively when protect is `false`.\n\n```js\nvar base = {a:16, b:{bb:4, cc:10}};\nvar extra = {b:{cc:25, dd:19}, c:5};\npush(base, extra); // {a:16, {bb:4, cc:25, dd:19}, c:5}\n```\n\n<a name=\"utils.throttle\"></a>\n## utils.throttle(func, wait)\n\nCreates and returns a new, throttled version of the passed function, that, when\ninvoked repeatedly, will only actually call the original function at most once\nper every `wait` milliseconds.\n\n<a name=\"utils.toArray\"></a>\n## utils.toArray(obj [, from])\n\nConvert an object to an array. Optionally specify the index at which to begin extraction.\n\n<a name=\"utils.uniqueArray\"></a>\n## utils.uniqueArray(array)\n\nCan produce only unique arrays of homogeneous primitives, e.g., an array of\nonly strings, an array of only booleans, or an array of only numerics\n\n<a name=\"utils.once\"></a>\n## utils.once(func)","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/utils_api.md","loc":{"lines":{"from":92,"to":119}},"filePath":"doc/utils_api.md","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["59",{"pageContent":"<a name=\"utils.once\"></a>\n## utils.once(func)\n\nEnsures that a function will only be called once.\n```js\nvar sum = 0;\nvar increment = utils.once(function () { sum++; });\nincrement(); // sum will equal 1\nincrement(); // sum will still equal 1\n```\n\nWill only send one DELETE request to the server even if the click event is fired multiple times.\n```js\nvar myHandler = function () {\n  $.ajax({type: 'DELETE', url: 'someurl.com', data: {id: 1}});\n};\nthis.on('click', utils.once(myHandler));\n```","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/doc/utils_api.md","loc":{"lines":{"from":118,"to":135}},"filePath":"doc/utils_api.md","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["60",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './lib/advice',\n    './lib/component',\n    './lib/compose',\n    './lib/debug',\n    './lib/logger',\n    './lib/registry',\n    './lib/utils'\n  ],\n\n  function(advice, component, compose, debug, logger, registry, utils) {\n    'use strict';\n\n    return {\n      advice: advice,\n      component: component,\n      compose: compose,\n      debug: debug,\n      logger: logger,\n      registry: registry,\n      utils: utils\n    };\n\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/index.js","loc":{"lines":{"from":1,"to":29}},"filePath":"index.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["61",{"pageContent":"// Karma configuration file\n//\n// For all available config options and default values, see:\n// https://github.com/karma-runner/karma/blob/stable/lib/config.js#L54\n\nmodule.exports = function (config) {\n  'use strict';\n\n  config.set({\n    // base path, that will be used to resolve files and exclude\n    basePath: '',\n\n    frameworks: [\n      'jasmine'\n    ],\n\n    // list of files / patterns to load in the browser\n    files: [\n      // loaded without require\n      'bower_components/jquery/dist/jquery.js',\n      'build/flight.js',\n\n      // hack to load RequireJS after the built lib\n      'node_modules/requirejs/require.js',\n      'node_modules/karma-requirejs/lib/adapter.js',\n\n      // loaded with require\n      {pattern: 'index.js', included: false},\n      {pattern: 'lib/**/*.js', included: false},\n      {pattern: 'test/spec/**/*_spec.js', included: false},\n\n      'test/test-main.js'\n    ],","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/karma.conf.js","loc":{"lines":{"from":1,"to":33}},"filePath":"karma.conf.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["62",{"pageContent":"'test/test-main.js'\n    ],\n\n    // enable / disable watching file and executing tests whenever any file changes\n    // CLI --auto-watch --no-auto-watch\n    autoWatch: true,\n\n    // Start these browsers\n    // CLI --browsers Chrome, Firefox, Safari\n    browsers: [process.env.TRAVIS ? 'Firefox' : 'Chrome'],\n\n    // If browser does not capture in given timeout [ms], kill it\n    // CLI --capture-timeout 5000\n    captureTimeout: 20000,\n\n    // list of files to exclude\n    exclude: [],\n\n    // use dots reporter, as travis terminal does not support escaping sequences\n    // possible values: 'dots', 'progress'\n    // CLI --reporters progress\n    reporters: [process.env.TRAVIS ? 'dots' : 'progress'],\n\n    // Auto run tests on start (when browsers are captured) and exit\n    // CLI --single-run --no-single-run\n    singleRun: false\n  });\n};","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/karma.conf.js","loc":{"lines":{"from":32,"to":59}},"filePath":"karma.conf.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["63",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './utils'\n  ],\n\n  function(utils) {\n    'use strict';\n\n    var advice = {\n\n      around: function(base, wrapped) {\n        return function composedAround() {\n          // unpacking arguments by hand benchmarked faster\n          var i = 0, l = arguments.length, args = new Array(l + 1);\n          args[0] = base.bind(this);\n          for (; i < l; i++) {\n            args[i + 1] = arguments[i];\n          }\n          return wrapped.apply(this, args);\n        };\n      },\n\n      before: function(base, before) {\n        var beforeFn = (typeof before == 'function') ? before : before.obj[before.fnName];\n        return function composedBefore() {\n          beforeFn.apply(this, arguments);\n          return base.apply(this, arguments);\n        };\n      },","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/advice.js","loc":{"lines":{"from":1,"to":32}},"filePath":"lib/advice.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["64",{"pageContent":"after: function(base, after) {\n        var afterFn = (typeof after == 'function') ? after : after.obj[after.fnName];\n        return function composedAfter() {\n          var res = (base.unbound || base).apply(this, arguments);\n          afterFn.apply(this, arguments);\n          return res;\n        };\n      },\n\n      // a mixin that allows other mixins to augment existing functions by adding additional\n      // code before, after or around.\n      withAdvice: function() {\n        ['before', 'after', 'around'].forEach(function(m) {\n          this[m] = function(method, fn) {\n            var methods = method.trim().split(' ');\n\n            methods.forEach(function(i) {\n              utils.mutateProperty(this, i, function() {\n                if (typeof this[i] == 'function') {\n                  this[i] = advice[m](this[i], fn);\n                } else {\n                  this[i] = fn;\n                }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/advice.js","loc":{"lines":{"from":34,"to":56}},"filePath":"lib/advice.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["65",{"pageContent":"return this[i];\n              });\n            }, this);\n          };\n        }, this);\n      }\n    };\n\n    return advice;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/advice.js","loc":{"lines":{"from":58,"to":68}},"filePath":"lib/advice.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["66",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './utils',\n    './registry',\n    './debug'\n  ],\n\n  function(utils, registry, debug) {\n    'use strict';\n\n    // common mixin allocates basic functionality - used by all component prototypes\n    // callback context is bound to component\n    var componentId = 0;\n\n    function teardownInstance(instanceInfo) {\n      if (!instanceInfo) { return; }\n\n      instanceInfo.events.slice().forEach(function(event) {\n        var args = [event.type];\n\n        event.element && args.unshift(event.element);\n        (typeof event.callback == 'function') && args.push(event.callback);\n\n        this.off.apply(this, args);\n      }, instanceInfo.instance);\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":1,"to":29}},"filePath":"lib/base.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["67",{"pageContent":"this.off.apply(this, args);\n      }, instanceInfo.instance);\n    }\n\n    function checkSerializable(type, data) {\n      try {\n        window.postMessage(data, '*');\n      } catch (e) {\n        debug.warn.call(this, [\n          'Event \"', type, '\" was triggered with non-serializable data. ',\n          'Flight recommends you avoid passing non-serializable data in events.'\n        ].join(''));\n      }\n    }\n\n    function warnAboutReferenceType(key) {\n      debug.warn.call(this, [\n        'Attribute \"', key, '\" defaults to an array or object. ',\n        'Enclose this in a function to avoid sharing between component instances.'\n      ].join(''));\n    }\n\n    function initAttributes(attrs) {\n      var definedKeys = [], incomingKeys;\n\n      this.attr = new this.attrDef;\n\n      if (debug.enabled && window.console) {\n        for (var key in this.attrDef.prototype) {\n          definedKeys.push(key);\n        }\n        incomingKeys = Object.keys(attrs);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":27,"to":58}},"filePath":"lib/base.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["68",{"pageContent":"for (var i = incomingKeys.length - 1; i >= 0; i--) {\n          if (definedKeys.indexOf(incomingKeys[i]) == -1) {\n            debug.warn.call(this, 'Passed unused attribute \"' + incomingKeys[i] + '\".');\n            break;\n          }\n        }\n      }\n\n      for (var key in this.attrDef.prototype) {\n        if (typeof attrs[key] == 'undefined') {\n          if (this.attr[key] === null) {\n            throw new Error('Required attribute \"' + key +\n                            '\" not specified in attachTo for component \"' + this.toString() + '\".');\n          }\n          // Warn about reference types in attributes\n          if (debug.enabled && typeof this.attr[key] === 'object') {\n            warnAboutReferenceType.call(this, key);\n          }\n        } else {\n          this.attr[key] = attrs[key];\n        }\n\n        if (typeof this.attr[key] == 'function') {\n          this.attr[key] = this.attr[key].call(this);\n        }\n      }\n\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":60,"to":87}},"filePath":"lib/base.js","complexity":9,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["69",{"pageContent":"}\n\n    function initDeprecatedAttributes(attrs) {\n      if (debug.enabled) {\n        debug.warn.call(this, 'defaultAttrs will be removed in a future version. Please use attributes.');\n      }\n\n      // merge defaults with supplied options\n      // put options in attr.__proto__ to avoid merge overhead\n      var attr = Object.create(attrs);\n\n      for (var key in this.defaults) {\n        if (!attrs.hasOwnProperty(key)) {\n          attr[key] = this.defaults[key];\n          // Warn about reference types in defaultAttrs\n          if (debug.enabled && typeof this.defaults[key] === 'object') {\n            warnAboutReferenceType.call(this, key);\n          }\n        }\n      }\n\n      this.attr = attr;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":87,"to":108}},"filePath":"lib/base.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["70",{"pageContent":"this.attr = attr;\n\n      Object.keys(this.defaults || {}).forEach(function(key) {\n        if (this.defaults[key] === null && this.attr[key] === null) {\n          throw new Error('Required attribute \"' + key +\n                          '\" not specified in attachTo for component \"' + this.toString() + '\".');\n        }\n      }, this);\n    }\n\n    function proxyEventTo(targetEvent) {\n      return function(e, data) {\n        $(e.target).trigger(targetEvent, data);\n      };\n    }\n\n    function withBase() {\n\n      // delegate trigger, bind and unbind to an element\n      // if $element not supplied, use component's node\n      // other arguments are passed on\n      // event can be either a string specifying the type\n      // of the event, or a hash specifying both the type\n      // and a default function to be called.\n      this.trigger = function() {\n        var $element, type, data, event, defaultFn;\n        var lastIndex = arguments.length - 1, lastArg = arguments[lastIndex];","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":108,"to":134}},"filePath":"lib/base.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["71",{"pageContent":"if (typeof lastArg != 'string' && !(lastArg && lastArg.defaultBehavior)) {\n          lastIndex--;\n          data = lastArg;\n        }\n\n        if (lastIndex == 1) {\n          $element = $(arguments[0]);\n          event = arguments[1];\n        } else {\n          $element = this.$node;\n          event = arguments[0];\n        }\n\n        if (event.defaultBehavior) {\n          defaultFn = event.defaultBehavior;\n          event = $.Event(event.type);\n        }\n\n        type = event.type || event;\n\n        if (debug.enabled && window.postMessage) {\n          checkSerializable.call(this, type, data);\n        }\n\n        if (typeof this.attr.eventData == 'object') {\n          data = $.extend(true, {}, this.attr.eventData, data);\n        }\n\n        $element.trigger((event || type), data);\n\n        if (defaultFn && !event.isDefaultPrevented()) {\n          (this[defaultFn] || defaultFn).call(this, event, data);\n        }\n\n        return $element;\n      };","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":136,"to":171}},"filePath":"lib/base.js","complexity":7,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["72",{"pageContent":"return $element;\n      };\n\n\n      this.on = function() {\n        var $element, type, callback, originalCb;\n        var lastIndex = arguments.length - 1, origin = arguments[lastIndex];\n\n        if (typeof origin == 'object') {\n          //delegate callback\n          originalCb = utils.delegate(\n            this.resolveDelegateRules(origin)\n          );\n        } else if (typeof origin == 'string') {\n          originalCb = proxyEventTo(origin);\n        } else {\n          originalCb = origin;\n        }\n\n        if (lastIndex == 2) {\n          $element = $(arguments[0]);\n          type = arguments[1];\n        } else {\n          $element = this.$node;\n          type = arguments[0];\n        }\n\n        if (typeof originalCb != 'function' && typeof originalCb != 'object') {\n          throw new Error('Unable to bind to \"' + type +\n                          '\" because the given callback is not a function or an object');\n        }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":170,"to":200}},"filePath":"lib/base.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["73",{"pageContent":"callback = originalCb.bind(this);\n        callback.target = originalCb;\n        callback.context = this;\n\n        $element.on(type, callback);\n\n        // store every bound version of the callback\n        originalCb.bound || (originalCb.bound = []);\n        originalCb.bound.push(callback);\n\n        return callback;\n      };\n\n      this.off = function() {\n        var $element, type, callback;\n        var lastIndex = arguments.length - 1;\n\n        if (typeof arguments[lastIndex] == 'function') {\n          callback = arguments[lastIndex];\n          lastIndex -= 1;\n        }\n\n        if (lastIndex == 1) {\n          $element = $(arguments[0]);\n          type = arguments[1];\n        } else {\n          $element = this.$node;\n          type = arguments[0];\n        }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":202,"to":230}},"filePath":"lib/base.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["74",{"pageContent":"if (callback) {\n          //this callback may be the original function or a bound version\n          var boundFunctions = callback.target ? callback.target.bound : callback.bound || [];\n          //set callback to version bound against this instance\n          boundFunctions && boundFunctions.some(function(fn, i, arr) {\n            if (fn.context && (this.identity == fn.context.identity)) {\n              arr.splice(i, 1);\n              callback = fn;\n              return true;\n            }\n          }, this);\n          $element.off(type, callback);\n        } else {\n          // Loop through the events of `this` instance\n          // and unbind using the callback\n          registry.findInstanceInfo(this).events.forEach(function (event) {\n            if (type == event.type) {\n              $element.off(type, event.callback);\n            }\n          });\n        }\n\n        return $element;\n      };\n\n      this.resolveDelegateRules = function(ruleInfo) {\n        var rules = {};","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":232,"to":258}},"filePath":"lib/base.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["75",{"pageContent":"this.resolveDelegateRules = function(ruleInfo) {\n        var rules = {};\n\n        Object.keys(ruleInfo).forEach(function(r) {\n          if (!(r in this.attr)) {\n            throw new Error('Component \"' + this.toString() + '\" wants to listen on \"' + r + '\" but no such attribute was defined.');\n          }\n          rules[this.attr[r]] = (typeof ruleInfo[r] == 'string') ? proxyEventTo(ruleInfo[r]) : ruleInfo[r];\n        }, this);\n\n        return rules;\n      };\n\n      this.select = function(attributeKey) {\n        return this.$node.find(this.attr[attributeKey]);\n      };\n\n      // New-style attributes\n\n      this.attributes = function(attrs) {\n\n        var Attributes = function() {};\n\n        if (this.attrDef) {\n          Attributes.prototype = new this.attrDef;\n        }\n\n        for (var name in attrs) {\n          Attributes.prototype[name] = attrs[name];\n        }\n\n        this.attrDef = Attributes;\n      };\n\n      // Deprecated attributes","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":257,"to":291}},"filePath":"lib/base.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["76",{"pageContent":"this.attrDef = Attributes;\n      };\n\n      // Deprecated attributes\n\n      this.defaultAttrs = function(defaults) {\n        utils.push(this.defaults, defaults, true) || (this.defaults = defaults);\n      };\n\n      this.initialize = function(node, attrs) {\n        attrs = attrs || {};\n        this.identity || (this.identity = componentId++);\n\n        if (!node) {\n          throw new Error('Component needs a node');\n        }\n\n        if (node.jquery) {\n          this.node = node[0];\n          this.$node = node;\n        } else {\n          this.node = node;\n          this.$node = $(node);\n        }\n\n        if (this.attrDef) {\n          initAttributes.call(this, attrs);\n        } else {\n          initDeprecatedAttributes.call(this, attrs);\n        }\n\n        return this;\n      };\n\n      this.teardown = function() {\n        var instanceInfo = registry.findInstanceInfo(this);\n\n        if (instanceInfo) {\n          teardownInstance(instanceInfo);\n        }\n      };\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":288,"to":329}},"filePath":"lib/base.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["77",{"pageContent":"if (instanceInfo) {\n          teardownInstance(instanceInfo);\n        }\n      };\n    }\n\n    return withBase;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/base.js","loc":{"lines":{"from":325,"to":333}},"filePath":"lib/base.js","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["78",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './advice',\n    './utils',\n    './compose',\n    './base',\n    './registry',\n    './logger',\n    './debug'\n  ],\n\n  function(advice, utils, compose, withBase, registry, withLogging, debug) {\n    'use strict';\n\n    var functionNameRegEx = /function (.*?)\\s?\\(/;\n    var ignoredMixin = {\n      withBase: true,\n      withLogging: true\n    };\n\n    // teardown for all instances of this constructor\n    function teardownAll() {\n      var componentInfo = registry.findComponentInfo(this);\n\n      componentInfo && Object.keys(componentInfo.instances).forEach(function(k) {\n        var info = componentInfo.instances[k];\n        // It's possible that a previous teardown caused another component to teardown,\n        // so we can't assume that the instances object is as it was.\n        if (info && info.instance) {\n          info.instance.teardown();\n        }\n      });\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":1,"to":36}},"filePath":"lib/component.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["79",{"pageContent":"function attachTo(selector/*, options args */) {\n      // unpacking arguments by hand benchmarked faster\n      var l = arguments.length;\n      var args = new Array(l - 1);\n      for (var i = 1; i < l; i++) {\n        args[i - 1] = arguments[i];\n      }\n\n      if (!selector) {\n        throw new Error('Component needs to be attachTo\\'d a jQuery object, native node or selector string');\n      }\n\n      var options = utils.merge.apply(utils, args);\n      var componentInfo = registry.findComponentInfo(this);\n\n      $(selector).each(function(i, node) {\n        if (componentInfo && componentInfo.isAttachedTo(node)) {\n          // already attached\n          return;\n        }\n\n        (new this).initialize(node, options);\n      }.bind(this));\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":38,"to":61}},"filePath":"lib/component.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["80",{"pageContent":"(new this).initialize(node, options);\n      }.bind(this));\n    }\n\n    function prettyPrintMixins() {\n      //could be called from constructor or constructor.prototype\n      var mixedIn = this.mixedIn || this.prototype.mixedIn || [];\n      return mixedIn.map(function(mixin) {\n        if (mixin.name == null) {\n          // function name property not supported by this browser, use regex\n          var m = mixin.toString().match(functionNameRegEx);\n          return (m && m[1]) ? m[1] : '';\n        }\n        return (!ignoredMixin[mixin.name] ? mixin.name : '');\n      }).filter(Boolean).join(', ');\n    };","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":59,"to":74}},"filePath":"lib/component.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["81",{"pageContent":"// define the constructor for a custom component type\n    // takes an unlimited number of mixin functions as arguments\n    // typical api call with 3 mixins: defineComponent(timeline, withTweetCapability, withScrollCapability);\n    function defineComponent(/*mixins*/) {\n      // unpacking arguments by hand benchmarked faster\n      var l = arguments.length;\n      var mixins = new Array(l);\n      for (var i = 0; i < l; i++) {\n        mixins[i] = arguments[i];\n      }\n\n      var Component = function() {};\n\n      Component.toString = Component.prototype.toString = prettyPrintMixins;\n      if (debug.enabled) {\n        Component.describe = Component.prototype.describe = Component.toString();\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":77,"to":93}},"filePath":"lib/component.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["82",{"pageContent":"// 'options' is optional hash to be merged with 'defaults' in the component definition\n      Component.attachTo = attachTo;\n      // enables extension of existing \"base\" Components\n      Component.mixin = function() {\n        var newComponent = defineComponent(); //TODO: fix pretty print\n        var newPrototype = Object.create(Component.prototype);\n        newPrototype.mixedIn = [].concat(Component.prototype.mixedIn);\n        newPrototype.defaults = utils.merge(Component.prototype.defaults);\n        newPrototype.attrDef = Component.prototype.attrDef;\n        compose.mixin(newPrototype, arguments);\n        newComponent.prototype = newPrototype;\n        newComponent.prototype.constructor = newComponent;\n        return newComponent;\n      };\n      Component.teardownAll = teardownAll;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":95,"to":109}},"filePath":"lib/component.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["83",{"pageContent":"// prepend common mixins to supplied list, then mixin all flavors\n      if (debug.enabled) {\n        mixins.unshift(withLogging);\n      }\n      mixins.unshift(withBase, advice.withAdvice, registry.withRegistration);\n      compose.mixin(Component.prototype, mixins);\n\n      return Component;\n    }\n\n    defineComponent.teardownAll = function() {\n      registry.components.slice().forEach(function(c) {\n        c.component.teardownAll();\n      });\n      registry.reset();\n    };\n\n    return defineComponent;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/component.js","loc":{"lines":{"from":111,"to":130}},"filePath":"lib/component.js","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["84",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './utils'\n  ],\n\n  function(utils) {\n    'use strict';\n\n    var dontLock = ['mixedIn', 'attrDef'];\n\n    function setWritability(obj, writable) {\n      Object.keys(obj).forEach(function (key) {\n        if (dontLock.indexOf(key) < 0) {\n          utils.propertyWritability(obj, key, writable);\n        }\n      });\n    }\n\n    function mixin(base, mixins) {\n      base.mixedIn = Object.prototype.hasOwnProperty.call(base, 'mixedIn') ? base.mixedIn : [];\n\n      for (var i = 0; i < mixins.length; i++) {\n        if (base.mixedIn.indexOf(mixins[i]) == -1) {\n          setWritability(base, false);\n          mixins[i].call(base);\n          base.mixedIn.push(mixins[i]);\n        }\n      }\n\n      setWritability(base, true);\n    }\n\n    return {\n      mixin: mixin\n    };\n\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/compose.js","loc":{"lines":{"from":1,"to":41}},"filePath":"lib/compose.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["85",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  ['./registry'],\n\n  function(registry) {\n    'use strict';\n\n    // ==========================================\n    // Search object model\n    // ==========================================\n\n    function traverse(util, searchTerm, options) {\n      options = options || {};\n      var obj = options.obj || window;\n      var path = options.path || ((obj == window) ? 'window' : '');\n      var props = Object.keys(obj);\n      props.forEach(function(prop) {\n        if ((tests[util] || util)(searchTerm, obj, prop)) {\n          console.log([path, '.', prop].join(''), '->', ['(', typeof obj[prop], ')'].join(''), obj[prop]);\n        }\n        if (Object.prototype.toString.call(obj[prop]) == '[object Object]' && (obj[prop] != obj) && path.split('.').indexOf(prop) == -1) {\n          traverse(util, searchTerm, {obj: obj[prop], path: [path,prop].join('.')});\n        }\n      });\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":1,"to":27}},"filePath":"lib/debug.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["86",{"pageContent":"function search(util, expected, searchTerm, options) {\n      if (!expected || typeof searchTerm == expected) {\n        traverse(util, searchTerm, options);\n      } else {\n        console.error([searchTerm, 'must be', expected].join(' '));\n      }\n    }\n\n    var tests = {\n      'name': function(searchTerm, obj, prop) {return searchTerm == prop;},\n      'nameContains': function(searchTerm, obj, prop) {return prop.indexOf(searchTerm) > -1;},\n      'type': function(searchTerm, obj, prop) {return obj[prop] instanceof searchTerm;},\n      'value': function(searchTerm, obj, prop) {return obj[prop] === searchTerm;},\n      'valueCoerced': function(searchTerm, obj, prop) {return obj[prop] == searchTerm;}\n    };","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":29,"to":43}},"filePath":"lib/debug.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["87",{"pageContent":"function byName(searchTerm, options) {search('name', 'string', searchTerm, options);}\n    function byNameContains(searchTerm, options) {search('nameContains', 'string', searchTerm, options);}\n    function byType(searchTerm, options) {search('type', 'function', searchTerm, options);}\n    function byValue(searchTerm, options) {search('value', null, searchTerm, options);}\n    function byValueCoerced(searchTerm, options) {search('valueCoerced', null, searchTerm, options);}\n    function custom(fn, options) {traverse(fn, null, options);}\n\n    // ==========================================\n    // Event logging\n    // ==========================================\n\n    var ALL = 'all'; //no filter\n\n    //log nothing by default\n    var logFilter = {\n      eventNames: [],\n      actions: []\n    }\n\n    function filterEventLogsByAction(/*actions*/) {\n      var actions = [].slice.call(arguments);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":45,"to":65}},"filePath":"lib/debug.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["88",{"pageContent":"function filterEventLogsByAction(/*actions*/) {\n      var actions = [].slice.call(arguments);\n\n      logFilter.eventNames.length || (logFilter.eventNames = ALL);\n      logFilter.actions = actions.length ? actions : ALL;\n      saveLogFilter();\n    }\n\n    function filterEventLogsByName(/*eventNames*/) {\n      var eventNames = [].slice.call(arguments);\n\n      logFilter.actions.length || (logFilter.actions = ALL);\n      logFilter.eventNames = eventNames.length ? eventNames : ALL;\n      saveLogFilter();\n    }\n\n    function hideAllEventLogs() {\n      logFilter.actions = [];\n      logFilter.eventNames = [];\n      saveLogFilter();\n    }\n\n    function showAllEventLogs() {\n      logFilter.actions = ALL;\n      logFilter.eventNames = ALL;\n      saveLogFilter();\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":64,"to":90}},"filePath":"lib/debug.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["89",{"pageContent":"function saveLogFilter() {\n      try {\n        if (window.localStorage) {\n          localStorage.setItem('logFilter_eventNames', logFilter.eventNames);\n          localStorage.setItem('logFilter_actions', logFilter.actions);\n        }\n      } catch (ignored) {};\n    }\n\n    function retrieveLogFilter() {\n      var eventNames, actions;\n      try {\n        eventNames = (window.localStorage && localStorage.getItem('logFilter_eventNames'));\n        actions = (window.localStorage && localStorage.getItem('logFilter_actions'));\n      } catch (ignored) {\n        return;\n      }\n      eventNames && (logFilter.eventNames = eventNames);\n      actions && (logFilter.actions = actions);\n\n      // reconstitute arrays in place\n      Object.keys(logFilter).forEach(function(k) {\n        var thisProp = logFilter[k];\n        if (typeof thisProp == 'string' && thisProp !== ALL) {\n          logFilter[k] = thisProp ? thisProp.split(',') : [];\n        }\n      });\n    }\n\n    return {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":92,"to":121}},"filePath":"lib/debug.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["90",{"pageContent":"return {\n\n      enable: function(enable) {\n        this.enabled = !!enable;\n\n        if (enable && window.console) {\n          console.info('Booting in DEBUG mode');\n          console.info('You can configure event logging with DEBUG.events.logAll()/logNone()/logByName()/logByAction()');\n        }\n\n        retrieveLogFilter();\n\n        window.DEBUG = this;\n      },\n\n      warn: function (/*messages*/) {\n        if (!window.console) { return; }\n        var fn = (console.warn || console.log);\n        var messages = [].slice.call(arguments);\n        messages.unshift(this.toString() + ':')\n        fn.apply(console, messages);\n      },\n\n      registry: registry,\n\n      find: {\n        byName: byName,\n        byNameContains: byNameContains,\n        byType: byType,\n        byValue: byValue,\n        byValueCoerced: byValueCoerced,\n        custom: custom\n      },\n\n      events: {\n        logFilter: logFilter,","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":121,"to":156}},"filePath":"lib/debug.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["91",{"pageContent":"events: {\n        logFilter: logFilter,\n\n        // Accepts any number of action args\n        // e.g. DEBUG.events.logByAction(\"on\", \"off\")\n        logByAction: filterEventLogsByAction,\n\n        // Accepts any number of event name args (inc. regex or wildcards)\n        // e.g. DEBUG.events.logByName(/ui.*/, \"*Thread*\");\n        logByName: filterEventLogsByName,\n\n        logAll: showAllEventLogs,\n        logNone: hideAllEventLogs\n      }\n    };\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/debug.js","loc":{"lines":{"from":155,"to":171}},"filePath":"lib/debug.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["92",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [\n    './utils'\n  ],\n\n  function(utils) {\n    'use strict';\n\n    var actionSymbols = {\n      on: '<-',\n      trigger: '->',\n      off: 'x '\n    };\n\n    function elemToString(elem) {\n      var tagStr = elem.tagName ? elem.tagName.toLowerCase() : elem.toString();\n      var classStr = elem.className ? '.' + (elem.className) : '';\n      var result = tagStr + classStr;\n      return elem.tagName ? ['\\'', '\\''].join(result) : result;\n    }\n\n    function log(action, component, eventArgs) {\n      if (!window.DEBUG || !window.DEBUG.enabled) {\n        return;\n      }\n      var name, eventType, elem, fn, payload, logFilter, toRegExp, actionLoggable, nameLoggable, info;\n\n      if (typeof eventArgs[eventArgs.length - 1] == 'function') {\n        fn = eventArgs.pop();\n        fn = fn.unbound || fn; // use unbound version if any (better info)\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/logger.js","loc":{"lines":{"from":1,"to":34}},"filePath":"lib/logger.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["93",{"pageContent":"if (eventArgs.length == 1) {\n        elem = component.$node[0];\n        eventType = eventArgs[0];\n      } else if ((eventArgs.length == 2) && typeof eventArgs[1] == 'object' && !eventArgs[1].type) {\n        //2 args, first arg is not elem\n        elem = component.$node[0];\n        eventType = eventArgs[0];\n        if (action == \"trigger\") {\n          payload = eventArgs[1];\n        }\n      } else {\n        //2+ args, first arg is elem\n        elem = eventArgs[0];\n        eventType = eventArgs[1];\n        if (action == \"trigger\") {\n          payload = eventArgs[2];\n        }\n      }\n\n      name = typeof eventType == 'object' ? eventType.type : eventType;\n\n      logFilter = window.DEBUG.events.logFilter;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/logger.js","loc":{"lines":{"from":36,"to":57}},"filePath":"lib/logger.js","complexity":5,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["94",{"pageContent":"logFilter = window.DEBUG.events.logFilter;\n\n      // no regex for you, actions...\n      actionLoggable = logFilter.actions == 'all' || (logFilter.actions.indexOf(action) > -1);\n      // event name filter allow wildcards or regex...\n      toRegExp = function(expr) {\n        return expr.test ? expr : new RegExp('^' + expr.replace(/\\*/g, '.*') + '$');\n      };\n      nameLoggable =\n        logFilter.eventNames == 'all' ||\n        logFilter.eventNames.some(function(e) {return toRegExp(e).test(name);});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/logger.js","loc":{"lines":{"from":57,"to":67}},"filePath":"lib/logger.js","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["95",{"pageContent":"if (actionLoggable && nameLoggable) {\n        info = [actionSymbols[action], action, '[' + name + ']'];\n        payload && info.push(payload);\n        info.push(elemToString(elem));\n        info.push(component.constructor.describe.split(' ').slice(0,3).join(' '));\n        console.groupCollapsed && action == 'trigger' && console.groupCollapsed(action, name);\n        // IE9 doesn't define `apply` for console methods, but this works everywhere:\n        Function.prototype.apply.call(console.info, console, info);\n      }\n    }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/logger.js","loc":{"lines":{"from":69,"to":78}},"filePath":"lib/logger.js","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["96",{"pageContent":"function withLogging() {\n      this.before('trigger', function() {\n        log('trigger', this, utils.toArray(arguments));\n      });\n      if (console.groupCollapsed) {\n        this.after('trigger', function() {\n          console.groupEnd();\n        });\n      }\n      this.before('on', function() {\n        log('on', this, utils.toArray(arguments));\n      });\n      this.before('off', function() {\n        log('off', this, utils.toArray(arguments));\n      });\n    }\n\n    return withLogging;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/logger.js","loc":{"lines":{"from":80,"to":99}},"filePath":"lib/logger.js","complexity":2,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["97",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  [],\n\n  function() {\n    'use strict';\n\n    function parseEventArgs(instance, args) {\n      var element, type, callback;\n      var end = args.length;\n\n      if (typeof args[end - 1] == 'function') {\n        end -= 1;\n        callback = args[end];\n      }\n\n      if (typeof args[end - 1] == 'object') {\n        end -= 1;\n      }\n\n      if (end == 2) {\n        element = args[0];\n        type = args[1];\n      } else {\n        element = instance.node;\n        type = args[0];\n      }\n\n      return {\n        element: element,\n        type: type,\n        callback: callback\n      };\n    }\n\n    function matchEvent(a, b) {\n      return (\n        (a.element == b.element) &&\n        (a.type == b.type) &&\n        (b.callback == null || (a.callback == b.callback))\n      );\n    }\n\n    function Registry() {\n\n      var registry = this;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":1,"to":48}},"filePath":"lib/registry.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["98",{"pageContent":"function Registry() {\n\n      var registry = this;\n\n      (this.reset = function() {\n        this.components = [];\n        this.allInstances = {};\n        this.events = [];\n      }).call(this);\n\n      function ComponentInfo(component) {\n        this.component = component;\n        this.attachedTo = [];\n        this.instances = {};\n\n        this.addInstance = function(instance) {\n          var instanceInfo = new InstanceInfo(instance);\n          this.instances[instance.identity] = instanceInfo;\n          this.attachedTo.push(instance.node);\n\n          return instanceInfo;\n        };\n\n        this.removeInstance = function(instance) {\n          delete this.instances[instance.identity];\n          var indexOfNode = this.attachedTo.indexOf(instance.node);\n          (indexOfNode > -1) && this.attachedTo.splice(indexOfNode, 1);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":46,"to":72}},"filePath":"lib/registry.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["99",{"pageContent":"if (!Object.keys(this.instances).length) {\n            //if I hold no more instances remove me from registry\n            registry.removeComponentInfo(this);\n          }\n        };\n\n        this.isAttachedTo = function(node) {\n          return this.attachedTo.indexOf(node) > -1;\n        };\n      }\n\n      function InstanceInfo(instance) {\n        this.instance = instance;\n        this.events = [];\n\n        this.addBind = function(event) {\n          this.events.push(event);\n          registry.events.push(event);\n        };\n\n        this.removeBind = function(event) {\n          for (var i = 0, e; e = this.events[i]; i++) {\n            if (matchEvent(e, event)) {\n              this.events.splice(i, 1);\n            }\n          }\n        };\n      }\n\n      this.addInstance = function(instance) {\n        var component = this.findComponentInfo(instance);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":74,"to":104}},"filePath":"lib/registry.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["100",{"pageContent":"if (!component) {\n          component = new ComponentInfo(instance.constructor);\n          this.components.push(component);\n        }\n\n        var inst = component.addInstance(instance);\n\n        this.allInstances[instance.identity] = inst;\n\n        return component;\n      };\n\n      this.removeInstance = function(instance) {\n        //remove from component info\n        var componentInfo = this.findComponentInfo(instance);\n        componentInfo && componentInfo.removeInstance(instance);\n\n        //remove from registry\n        delete this.allInstances[instance.identity];\n      };\n\n      this.removeComponentInfo = function(componentInfo) {\n        var index = this.components.indexOf(componentInfo);\n        (index > -1) && this.components.splice(index, 1);\n      };\n\n      this.findComponentInfo = function(which) {\n        var component = which.attachTo ? which : which.constructor;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":106,"to":133}},"filePath":"lib/registry.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["101",{"pageContent":"for (var i = 0, c; c = this.components[i]; i++) {\n          if (c.component === component) {\n            return c;\n          }\n        }\n\n        return null;\n      };\n\n      this.findInstanceInfo = function(instance) {\n        return this.allInstances[instance.identity] || null;\n      };\n\n      this.getBoundEventNames = function(instance) {\n        return this.findInstanceInfo(instance).events.map(function(ev) {\n          return ev.type;\n        });\n      };\n\n      this.findInstanceInfoByNode = function(node) {\n        var result = [];\n        Object.keys(this.allInstances).forEach(function(k) {\n          var thisInstanceInfo = this.allInstances[k];\n          if (thisInstanceInfo.instance.node === node) {\n            result.push(thisInstanceInfo);\n          }\n        }, this);\n        return result;\n      };\n\n      this.on = function(componentOn) {\n        var instance = registry.findInstanceInfo(this), boundCallback;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":135,"to":166}},"filePath":"lib/registry.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["102",{"pageContent":"// unpacking arguments by hand benchmarked faster\n        var l = arguments.length, i = 1;\n        var otherArgs = new Array(l - 1);\n        for (; i < l; i++) {\n          otherArgs[i - 1] = arguments[i];\n        }\n\n        if (instance) {\n          boundCallback = componentOn.apply(null, otherArgs);\n          if (boundCallback) {\n            otherArgs[otherArgs.length - 1] = boundCallback;\n          }\n          var event = parseEventArgs(this, otherArgs);\n          instance.addBind(event);\n        }\n      };\n\n      this.off = function(/*el, type, callback*/) {\n        var event = parseEventArgs(this, arguments),\n            instance = registry.findInstanceInfo(this);\n\n        if (instance) {\n          instance.removeBind(event);\n        }\n\n        //remove from global event registry\n        for (var i = 0, e; e = registry.events[i]; i++) {\n          if (matchEvent(e, event)) {\n            registry.events.splice(i, 1);\n          }\n        }\n      };","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":168,"to":199}},"filePath":"lib/registry.js","complexity":7,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["103",{"pageContent":"// debug tools may want to add advice to trigger\n      registry.trigger = function() {};\n\n      this.teardown = function() {\n        registry.removeInstance(this);\n      };\n\n      this.withRegistration = function() {\n        this.after('initialize', function() {\n          registry.addInstance(this);\n        });\n\n        this.around('on', registry.on);\n        this.after('off', registry.off);\n        //debug tools may want to add advice to trigger\n        window.DEBUG && DEBUG.enabled && this.after('trigger', registry.trigger);\n        this.after('teardown', {obj: registry, fnName: 'teardown'});\n      };\n\n    }\n\n    return new Registry;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/registry.js","loc":{"lines":{"from":201,"to":224}},"filePath":"lib/registry.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["104",{"pageContent":"/* Copyright 2013 Twitter, Inc. Licensed under The MIT License. http://opensource.org/licenses/MIT */\n\ndefine(\n\n  ['./debug'],\n\n  function(debug) {\n    'use strict';\n\n    var DEFAULT_INTERVAL = 100;\n\n    function canWriteProtect() {\n      var writeProtectSupported = debug.enabled && !Object.propertyIsEnumerable('getOwnPropertyDescriptor');\n      if (writeProtectSupported) {\n        //IE8 getOwnPropertyDescriptor is built-in but throws exeption on non DOM objects\n        try {\n          Object.getOwnPropertyDescriptor(Object, 'keys');\n        } catch (e) {\n         return false;\n        }\n      }\n\n      return writeProtectSupported;\n    }\n\n    var utils = {\n\n      isDomObj: function(obj) {\n        return !!(obj.nodeType || (obj === window));\n      },\n\n      toArray: function(obj, from) {\n        from = from || 0;\n        var len = obj.length, arr = new Array(len - from);\n        for (var i = from; i < len; i++) {\n          arr[i - from] = obj[i];\n        }\n        return arr;\n      },","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":1,"to":39}},"filePath":"lib/utils.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["105",{"pageContent":"// returns new object representing multiple objects merged together\n      // optional final argument is boolean which specifies if merge is recursive\n      // original objects are unmodified\n      //\n      // usage:\n      //   var base = {a:2, b:6};\n      //   var extra = {b:3, c:4};\n      //   merge(base, extra); //{a:2, b:3, c:4}\n      //   base; //{a:2, b:6}\n      //\n      //   var base = {a:2, b:6};\n      //   var extra = {b:3, c:4};\n      //   var extraExtra = {a:4, d:9};\n      //   merge(base, extra, extraExtra); //{a:4, b:3, c:4. d: 9}\n      //   base; //{a:2, b:6}\n      //\n      //   var base = {a:2, b:{bb:4, cc:5}};\n      //   var extra = {a:4, b:{cc:7, dd:1}};\n      //   merge(base, extra, true); //{a:4, b:{bb:4, cc:7, dd:1}}\n      //   base; //{a:2, b:{bb:4, cc:5}};\n\n      merge: function(/*obj1, obj2,....deepCopy*/) {\n        // unpacking arguments by hand benchmarked faster\n        var l = arguments.length,\n            args = new Array(l + 1);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":41,"to":65}},"filePath":"lib/utils.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["106",{"pageContent":"if (l === 0) {\n          return {};\n        }\n\n        for (var i = 0; i < l; i++) {\n          args[i + 1] = arguments[i];\n        }\n\n        //start with empty object so a copy is created\n        args[0] = {};\n\n        if (args[args.length - 1] === true) {\n          //jquery extend requires deep copy as first arg\n          args.pop();\n          args.unshift(true);\n        }\n\n        return $.extend.apply(undefined, args);\n      },","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":67,"to":85}},"filePath":"lib/utils.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["107",{"pageContent":"// updates base in place by copying properties of extra to it\n      // optionally clobber protected\n      // usage:\n      //   var base = {a:2, b:6};\n      //   var extra = {c:4};\n      //   push(base, extra); //{a:2, b:6, c:4}\n      //   base; //{a:2, b:6, c:4}\n      //\n      //   var base = {a:2, b:6};\n      //   var extra = {b: 4 c:4};\n      //   push(base, extra, true); //Error (\"utils.push attempted to overwrite 'b' while running in protected mode\")\n      //   base; //{a:2, b:6}\n      //\n      // objects with the same key will merge recursively when protect is false\n      // eg:\n      // var base = {a:16, b:{bb:4, cc:10}};\n      // var extra = {b:{cc:25, dd:19}, c:5};\n      // push(base, extra); //{a:16, {bb:4, cc:25, dd:19}, c:5}\n      //\n      push: function(base, extra, protect) {\n        if (base) {\n          Object.keys(extra || {}).forEach(function(key) {\n            if (base[key] && protect) {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":87,"to":109}},"filePath":"lib/utils.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["108",{"pageContent":"Object.keys(extra || {}).forEach(function(key) {\n            if (base[key] && protect) {\n              throw new Error('utils.push attempted to overwrite \"' + key + '\" while running in protected mode');\n            }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":108,"to":111}},"filePath":"lib/utils.js","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["109",{"pageContent":"if (typeof base[key] == 'object' && typeof extra[key] == 'object') {\n              // recurse\n              this.push(base[key], extra[key]);\n            } else {\n              // no protect, so extra wins\n              base[key] = extra[key];\n            }\n          }, this);\n        }\n\n        return base;\n      },\n\n      // If obj.key points to an enumerable property, return its value\n      // If obj.key points to a non-enumerable property, return undefined\n      getEnumerableProperty: function(obj, key) {\n        return obj.propertyIsEnumerable(key) ? obj[key] : undefined;\n      },\n\n      // build a function from other function(s)\n      // utils.compose(a,b,c) -> a(b(c()));\n      // implementation lifted from underscore.js (c) 2009-2012 Jeremy Ashkenas\n      compose: function() {\n        var funcs = arguments;\n\n        return function() {\n          var args = arguments;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":113,"to":139}},"filePath":"lib/utils.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["110",{"pageContent":"return function() {\n          var args = arguments;\n\n          for (var i = funcs.length - 1; i >= 0; i--) {\n            args = [funcs[i].apply(this, args)];\n          }\n\n          return args[0];\n        };\n      },\n\n      // Can only unique arrays of homogeneous primitives, e.g. an array of only strings, an array of only booleans, or an array of only numerics\n      uniqueArray: function(array) {\n        var u = {}, a = [];\n\n        for (var i = 0, l = array.length; i < l; ++i) {\n          if (u.hasOwnProperty(array[i])) {\n            continue;\n          }\n\n          a.push(array[i]);\n          u[array[i]] = 1;\n        }\n\n        return a;\n      },\n\n      debounce: function(func, wait, immediate) {\n        if (typeof wait != 'number') {\n          wait = DEFAULT_INTERVAL;\n        }\n\n        var timeout, result;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":138,"to":170}},"filePath":"lib/utils.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["111",{"pageContent":"var timeout, result;\n\n        return function() {\n          var context = this, args = arguments;\n          var later = function() {\n            timeout = null;\n            if (!immediate) {\n              result = func.apply(context, args);\n            }\n          };\n          var callNow = immediate && !timeout;\n\n          timeout && clearTimeout(timeout);\n          timeout = setTimeout(later, wait);\n\n          if (callNow) {\n            result = func.apply(context, args);\n          }\n\n          return result;\n        };\n      },\n\n      throttle: function(func, wait) {\n        if (typeof wait != 'number') {\n          wait = DEFAULT_INTERVAL;\n        }\n\n        var context, args, timeout, throttling, more, result;\n        var whenDone = this.debounce(function() {\n          more = throttling = false;\n        }, wait);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":170,"to":201}},"filePath":"lib/utils.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["112",{"pageContent":"return function() {\n          context = this; args = arguments;\n          var later = function() {\n            timeout = null;\n            if (more) {\n              result = func.apply(context, args);\n            }\n            whenDone();\n          };\n\n          if (!timeout) {\n            timeout = setTimeout(later, wait);\n          }\n\n          if (throttling) {\n            more = true;\n          } else {\n            throttling = true;\n            result = func.apply(context, args);\n          }\n\n          whenDone();\n          return result;\n        };\n      },\n\n      countThen: function(num, base) {\n        return function() {\n          if (!--num) { return base.apply(this, arguments); }\n        };\n      },\n\n      delegate: function(rules) {\n        return function(e, data) {\n          var target = $(e.target), parent;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":203,"to":237}},"filePath":"lib/utils.js","complexity":5,"antiPatterns":["Use of var (instead of let/const)","Empty if statement"],"authors":["Andrew Lunny"]}}],["113",{"pageContent":"Object.keys(rules).forEach(function(selector) {\n            if (!e.isPropagationStopped() && (parent = target.closest(selector)).length) {\n              data = data || {};\n              e.currentTarget = data.el = parent[0];\n              return rules[selector].apply(this, [e, data]);\n            }\n          }, this);\n        };\n      },\n\n      // ensures that a function will only be called once.\n      // usage:\n      // will only create the application once\n      //   var initialize = utils.once(createApplication)\n      //     initialize();\n      //     initialize();\n      //\n      // will only delete a record once\n      //   var myHanlder = function () {\n      //     $.ajax({type: 'DELETE', url: 'someurl.com', data: {id: 1}});\n      //   };\n      //   this.on('click', utils.once(myHandler));\n      //\n      once: function(func) {\n        var ran, result;\n\n        return function() {\n          if (ran) {\n            return result;\n          }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":239,"to":268}},"filePath":"lib/utils.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["114",{"pageContent":"return function() {\n          if (ran) {\n            return result;\n          }\n\n          ran = true;\n          result = func.apply(this, arguments);\n\n          return result;\n        };\n      },\n\n      propertyWritability: function(obj, prop, writable) {\n        if (canWriteProtect() && obj.hasOwnProperty(prop)) {\n          Object.defineProperty(obj, prop, { writable: writable });\n        }\n      },\n\n      // Property locking/unlocking\n      mutateProperty: function(obj, prop, op) {\n        var writable;\n\n        if (!canWriteProtect() || !obj.hasOwnProperty(prop)) {\n          op.call(obj);\n          return;\n        }\n\n        writable = Object.getOwnPropertyDescriptor(obj, prop).writable;\n\n        Object.defineProperty(obj, prop, { writable: true });\n        op.call(obj);\n        Object.defineProperty(obj, prop, { writable: writable });\n\n      }\n\n    };\n\n    return utils;\n  }\n);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/lib/utils.js","loc":{"lines":{"from":265,"to":304}},"filePath":"lib/utils.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["115",{"pageContent":"{\n  \"name\": \"flightjs\",\n  \"version\": \"1.5.2\",\n  \"main\": \"build/flight.js\",\n  \"files\": [\n    \"build/flight.js\",\n    \"index.js\",\n    \"lib\"\n  ],\n  \"devDependencies\": {\n    \"jscs\" : \"^1.5.8\",\n    \"karma\": \"~0.12.6\",\n    \"karma-cli\": \"0.0.4\",\n    \"karma-jasmine\": \"~0.1.0\",\n    \"karma-requirejs\": \"~0.2.0\",\n    \"karma-chrome-launcher\": \"~0.1.0\",\n    \"karma-ie-launcher\": \"~0.1.1\",\n    \"karma-firefox-launcher\": \"~0.1.0\",\n    \"karma-safari-launcher\": \"~0.1.1\",\n    \"webpack\": \"^1.11\"\n  },\n  \"scripts\": {\n    \"build\": \"npm run webpack & npm run webpack-minified\",\n    \"checkStyle\": \"jscs lib test\",\n    \"prepublish\": \"npm run build\",\n    \"test\": \"npm run unit && npm run checkStyle\",\n    \"unit\": \"karma start --single-run\",\n    \"watch\": \"karma start\",\n    \"webpack\": \"webpack --progress --colors\",\n    \"webpack-minified\": \"webpack --progress --colors --optimize-minimize --output-file flight.min.js\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/package.json","loc":{"lines":{"from":1,"to":34}},"filePath":"package.json","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["116",{"pageContent":"},\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"http://www.opensource.org/licenses/mit-license.php\"\n    }\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"http://github.com/flightjs/flight.git\"\n  },\n  \"homepage\": \"http://github.com/flightjs/flight\"\n}","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/package.json","loc":{"lines":{"from":31,"to":43}},"filePath":"package.json","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["117",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/advice'], function (defineComponent, advice) {\n\n  var Component = (function () {\n    return defineComponent(function fnTest() {\n    });\n  })();\n\n  describe('(Core) advice', function () {\n\n    afterEach(function () {\n      Component.teardownAll();\n    });\n\n    it('should call the \"before\" function before the base function and return the base function', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.before(base, function (arg) {\n        test1 += \"Before: \" + arg + ', ';\n        return 'before';\n      });\n\n      expect(advised('Dan')).toBe('base');\n      expect(test1).toBe('Before: Dan, Base: Dan');\n    });\n\n    it('should call the \"after\" function after the base function, but return the base function', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/advice_spec.js","loc":{"lines":{"from":1,"to":39}},"filePath":"test/spec/advice_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["118",{"pageContent":"function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.after(base, function (arg) {\n        test1 += \", After: \" + arg;\n        return 'after';\n      });\n\n      expect(advised('Dan')).toBe('base');\n      expect(test1).toBe('Base: Dan, After: Dan');\n    });\n\n    it('should wrap the the first \"around\" argument with the second argument', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.around(base, function (orig, arg) {\n        test1 += '|';\n        orig(arg);\n        test1 += '|';\n        return 'around';\n      });\n\n      expect(advised('Dan')).toBe('around');\n      expect(test1).toBe('|Base: Dan|');\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/advice_spec.js","loc":{"lines":{"from":36,"to":67}},"filePath":"test/spec/advice_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["119",{"pageContent":"expect(advised('Dan')).toBe('around');\n      expect(test1).toBe('|Base: Dan|');\n    });\n\n    describe(\"withAdvice\", function () {\n      it('should add \"before\", \"after\" and \"around\" to an object', function () {\n        var subject = {\n          testa: '',\n          testb: '',\n          testc: '',\n          a: function () {\n            this.testa += 'A!';\n          },\n          b: function () {\n            this.testb += 'B!';\n          },\n          c: function () {\n            this.testc += 'C!';\n          }\n        }\n\n        advice.withAdvice.call(subject);\n\n        subject.before('a', function () {\n          this.testa += 'BEFORE!';\n        });\n\n        subject.after('b', function () {\n          this.testb += 'AFTER!';\n        });\n\n        subject.around('c', function (orig) {\n          this.testc += '|';\n          orig.call(subject);\n          this.testc += '|';\n        });\n\n        subject.a();\n        expect(subject.testa).toBe('BEFORE!A!');","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/advice_spec.js","loc":{"lines":{"from":65,"to":103}},"filePath":"test/spec/advice_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["120",{"pageContent":"subject.a();\n        expect(subject.testa).toBe('BEFORE!A!');\n\n        subject.b();\n        expect(subject.testb).toBe('B!AFTER!');\n\n        subject.c();\n        expect(subject.testc).toBe('|C!|');\n      });\n\n      it('should add advice to multiple functions of an object at once', function () {\n        var subject = {\n          test: '',\n          a: function () {\n            this.test += 'A!';\n          },\n          b: function () {\n            this.test += 'B!';\n          },\n          c: function () {\n            this.test += 'C!';\n          }\n        }\n\n        advice.withAdvice.call(subject);\n\n        subject.before('a b', function () {\n          this.test += 'BEFORE!';\n        });\n\n        subject.after('b c', function () {\n          this.test += 'AFTER!';\n        });\n\n        subject.around('a b c', function (orig) {\n          this.test = '|';\n          orig.call(subject);\n          this.test += '|';\n        });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/advice_spec.js","loc":{"lines":{"from":102,"to":140}},"filePath":"test/spec/advice_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["121",{"pageContent":"subject.a();\n        expect(subject.test).toBe('|BEFORE!A!|');\n\n        subject.b();\n        expect(subject.test).toBe('|BEFORE!B!AFTER!|');\n\n        subject.c();\n        expect(subject.test).toBe('|C!AFTER!|');\n      });\n    });\n\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/advice_spec.js","loc":{"lines":{"from":142,"to":155}},"filePath":"test/spec/advice_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["122",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/debug'], function (defineComponent, debug) {\n\n  describe('(Core) this.attributes', function() {\n    function testComponentDefaultAttrs() {\n      this.attributes({core: 35});\n    }\n\n    function testComponentDefaultAttrsRequired() {\n      this.attributes({req: null});\n    }\n\n    function withGoodDefaults() {\n      this.attributes({extra: 38});\n    }\n\n    function withBadDefaults() {\n      this.attributes({core: 38});\n    }\n\n    function withOverriddenAttributes() {\n      this.attributes({core: 1, extra: 38});\n    }\n\n    function testComponentWithFunctionAttribute() {\n      this.attributes({\n        f: function() {\n          return this.node.nodeName.toLowerCase() == 'body';\n        }\n      });\n    }\n\n    it('adds core defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs);\n      var instance = (new TestComponent).initialize(document.body);\n\n      expect(instance.attr.core).toBe(35);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":1,"to":38}},"filePath":"test/spec/attribute_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["123",{"pageContent":"expect(instance.attr.core).toBe(35);\n\n      TestComponent.teardownAll();\n    });\n\n    it('throws error if required attr not specified', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrsRequired);\n      expect(function () {\n        var instance = (new TestComponent).initialize(document.body);\n      }).toThrow('Required attribute \"req\" not specified in attachTo for component \"testComponentDefaultAttrsRequired\".');\n\n      TestComponent.teardownAll();\n    });\n\n    it(\"doesn't throw error if required attr is specified\", function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrsRequired);\n      expect(function () {\n        var instance = (new TestComponent).initialize(document.body, { req: 'hello' });\n      }).not.toThrow();\n\n      TestComponent.teardownAll();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":38,"to":59}},"filePath":"test/spec/attribute_spec.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["124",{"pageContent":"TestComponent.teardownAll();\n    });\n\n    it(\"doesn't attach to empty jQuery objects\", function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs);\n      var trouble = function () {\n        (new TestComponent).initialize();\n      };\n      expect(trouble).toThrow(new Error(\"Component needs a node\"));\n    });\n\n    it('adds mixin defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withGoodDefaults);\n      var instance = (new TestComponent).initialize(document.body);\n\n      expect(instance.attr.extra).toBe(38);\n\n      TestComponent.teardownAll();\n    });\n\n    it('adds core and mixin defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withGoodDefaults);\n      var instance = (new TestComponent).initialize(document.body);\n      expect(instance.attr.core).toBe(35);\n      expect(instance.attr.extra).toBe(38);\n\n      TestComponent.teardownAll();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":58,"to":85}},"filePath":"test/spec/attribute_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["125",{"pageContent":"TestComponent.teardownAll();\n    });\n\n    it('can override attributes from a mixin', function() {\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withOverriddenAttributes);\n      var instance = (new TestComponent).initialize(document.body);\n      expect(instance.attr.core).toBe(1);\n      expect(instance.attr.extra).toBe(38);\n\n      TestComponent.teardownAll();\n    });\n\n    it('can override attributes from a mixin when write-lock engaged', function() {\n      debug.enable(true);\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withOverriddenAttributes);\n      var instance = (new TestComponent).initialize(document.body);\n      expect(instance.attr.core).toBe(1);\n      expect(instance.attr.extra).toBe(38);\n      debug.enable(false);\n\n      TestComponent.teardownAll();\n    });\n\n    it('will evaluate attributes that are functions at initialize time', function() {\n      var TestComponent = defineComponent(testComponentWithFunctionAttribute);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":84,"to":108}},"filePath":"test/spec/attribute_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["126",{"pageContent":"var instance = (new TestComponent).initialize(document.body);\n      expect(instance.attr.f).toBe(true);\n\n      var instance2 = (new TestComponent).initialize($('div').get(0));\n      expect(instance2.attr.f).toBe(false);\n\n      TestComponent.teardownAll();\n    });\n  });\n\n  describe('(Core) this.defaultAttrs', function() {\n    function testComponentDefaultAttrs() {\n      this.defaultAttrs({core: 35});\n    }\n\n    function testComponentDefaultAttrsRequired() {\n      this.defaultAttrs({req: null});\n    }\n\n    function withGoodDefaults() {\n      this.defaultAttrs({extra: 38});\n    }\n\n    function withBadDefaults() {\n      this.defaultAttrs({core: 38});\n    }\n\n    it('adds core defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs);\n      var instance = (new TestComponent).initialize(document.body);\n\n      expect(instance.attr.core).toBe(35);\n\n      TestComponent.teardownAll();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":110,"to":144}},"filePath":"test/spec/attribute_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["127",{"pageContent":"expect(instance.attr.core).toBe(35);\n\n      TestComponent.teardownAll();\n    });\n\n    it('throws error if required attr not specified', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrsRequired);\n      expect(function () {\n        var instance = (new TestComponent).initialize(document.body);\n      }).toThrow('Required attribute \"req\" not specified in attachTo for component \"testComponentDefaultAttrsRequired\".');\n\n      TestComponent.teardownAll();\n    });\n\n    it(\"doesn't throw error if required attr is specified\", function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrsRequired);\n      expect(function () {\n        var instance = (new TestComponent).initialize(document.body, { req: 'hello' });\n      }).not.toThrow();\n\n      TestComponent.teardownAll();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":141,"to":162}},"filePath":"test/spec/attribute_spec.js","complexity":4,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["128",{"pageContent":"TestComponent.teardownAll();\n    });\n\n    it(\"doesn't attach to empty jQuery objects\", function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs);\n      var trouble = function () {\n        (new TestComponent).initialize();\n      };\n      expect(trouble).toThrow(new Error(\"Component needs a node\"));\n    });\n\n    it('adds mixin defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withGoodDefaults);\n      var instance = (new TestComponent).initialize(document.body);\n\n      expect(instance.attr.extra).toBe(38);\n\n      TestComponent.teardownAll();\n    });\n\n    it('adds core and mixin defaults', function () {\n      var TestComponent = defineComponent(testComponentDefaultAttrs, withGoodDefaults);\n      var instance = (new TestComponent).initialize(document.body);\n      expect(instance.attr.core).toBe(35);\n      expect(instance.attr.extra).toBe(38);\n\n      TestComponent.teardownAll();\n    });\n\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/attribute_spec.js","loc":{"lines":{"from":161,"to":192}},"filePath":"test/spec/attribute_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["129",{"pageContent":"\"use strict\";\n\ndefine(['lib/component'], function (defineComponent) {\n\n  describe('(Core) constructor', function () {\n\n    function testComponent() {\n      this.testVal = 1066;\n    }\n\n    function withGoodDefaults() {\n      this.defaultAttrs({extra: 38});\n    }\n\n    function withBadDefaults() {\n      this.defaultAttrs({core: 38});\n    }\n\n    it('exports a define function', function () {\n      expect(typeof defineComponent).toBe('function');\n    });\n\n    it(\"doesn't attach to empty jQuery objects\", function () {\n      var TestComponent = defineComponent(testComponent);\n      var trouble = function () {\n        (new TestComponent).initialize();\n      };\n      expect(trouble).toThrow(new Error(\"Component needs a node\"));\n    });\n\n    it('defineComponent() should return a component constructor', function () {\n      var TestComponent = defineComponent(testComponent);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":1,"to":32}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["130",{"pageContent":"expect(typeof TestComponent).toBe('function');\n      expect(typeof TestComponent.attachTo).toBe('function');\n      expect(TestComponent.prototype.testVal).toBe(1066);\n    });\n\n    it('has standard methods', function () {\n      var TestComponent = defineComponent(testComponent);\n\n      expect(typeof TestComponent.prototype.on).toBe('function');\n      expect(typeof TestComponent.prototype.off).toBe('function');\n      expect(typeof TestComponent.prototype.trigger).toBe('function');\n    });\n\n    it('can describe itself', function () {\n      var TestComponent = defineComponent(testComponent, withGoodDefaults);\n      expect(TestComponent.toString()).toBe('testComponent, withGoodDefaults');\n    });\n\n    describe('Component.mixin with this.defaultAttrs', function () {\n\n      var testString1, testString2, testString3 = \"\";\n      var TestComponent, AugmentedComponent1, AugmentedComponent2;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":34,"to":55}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["131",{"pageContent":"function baseMixin() {\n        this.defaultAttrs({\n          core: 35\n        });\n        this.fn1 = function() {\n          testString1 += \"testString1\"; return testString1\n        };\n        this.fn2 = function() {\n          testString2 += \"testString2\"; return testString2\n        };\n      }\n\n      function augmentingMixin1() {\n        this.defaultAttrs({\n          attr1: {thing: 4}\n        });\n        this.before('fn1', function() {\n          testString1 += \"augmented \"\n        });\n        this.fn3 = function() {\n          testString3 += \"testString3\"; return testString3\n        };\n      }\n\n      function augmentingMixin2() {\n        this.defaultAttrs({\n          attr1: {thing: 5}\n        });\n        this.before('fn1', function() {\n          testString1 += \"augmented \"\n        });\n        this.fn3 = function() {\n          testString3 += \"testString3\"; return testString3\n        };\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":57,"to":91}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["132",{"pageContent":"function initData() {\n        testString1 = \"\";\n        testString2 = \"\";\n        testString3 = \"\";\n      }\n\n      beforeEach(function () {\n        initData();\n        TestComponent = defineComponent(testComponent, baseMixin);\n      });\n\n      afterEach(function () {\n        TestComponent.teardownAll();\n        AugmentedComponent1 && AugmentedComponent1.teardownAll();\n        AugmentedComponent2 && AugmentedComponent2.teardownAll();\n      });\n\n      it('is a function', function () {\n        expect(typeof TestComponent.mixin).toBe('function');\n      });\n\n      it('augments a base component', function () {\n        var instance1 = (new TestComponent).initialize(document.body);\n        expect(instance1.fn1()).toBe('testString1');\n        expect(instance1.fn2()).toBe('testString2');\n        expect(instance1.fn3).not.toBeDefined();\n\n        initData();\n\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":93,"to":122}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["133",{"pageContent":"initData();\n\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1);\n\n        var instance2 = (new AugmentedComponent1).initialize(document.body);\n        expect(instance1.fn1()).toBe('testString1');\n        expect(instance1.fn2()).toBe('testString2');\n        expect(instance1.fn3).not.toBeDefined();\n\n        initData();\n\n        expect(instance2.fn1()).toBe('augmented testString1');\n        expect(instance2.fn2()).toBe('testString2');\n        expect(instance2.fn3()).toBe('testString3');\n      });\n\n      it('cannot re-add an original mixin to an augmented component', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent1.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":120,"to":140}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["134",{"pageContent":"it('can be repeatedly called even when augmenting mixins share properties', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        AugmentedComponent2 = TestComponent.mixin(augmentingMixin2, baseMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent2.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent1.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n        expect(AugmentedComponent2.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n        expect(typeof AugmentedComponent1.prototype.fn3).toBe(\"function\");\n        expect(typeof AugmentedComponent2.prototype.fn3).toBe(\"function\");\n        expect(AugmentedComponent1.prototype.defaults.attr1).toEqual({thing: 4});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":142,"to":151}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["135",{"pageContent":"expect(AugmentedComponent1.prototype.defaults.attr1).toEqual({thing: 4});\n        expect(AugmentedComponent1.prototype.defaults.core).toEqual(35);\n        expect(AugmentedComponent2.prototype.defaults.attr1).toEqual({thing: 5});\n        expect(AugmentedComponent2.prototype.defaults.core).toEqual(35);\n        expect(AugmentedComponent1.prototype.fn3 === AugmentedComponent2.prototype.fn3).toBe(false);\n        expect(AugmentedComponent1.prototype.defaults.attr1 === AugmentedComponent2.prototype.defaults.attr1).toBe(false);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":151,"to":157}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["136",{"pageContent":"it('(the AugmentedComponent) can be further augmented', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        var anotherMixin = function() {};\n        var MoreAugmentedComponent = AugmentedComponent1.mixin(anotherMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(MoreAugmentedComponent.prototype.mixedIn.length).toBe(AugmentedComponent1.prototype.mixedIn.length + 1);\n        expect(MoreAugmentedComponent.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n      });\n\n      it('(the AugmentedComponent) can describe itself', function () {\n          AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n          expect(AugmentedComponent1.toString()).toBe('testComponent, baseMixin, augmentingMixin1');\n      });\n\n    });\n\n    describe('Component.mixin with this.attributes', function () {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":159,"to":175}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["137",{"pageContent":"});\n\n    describe('Component.mixin with this.attributes', function () {\n\n      var testString1, testString2, testString3 = \"\";\n      var TestComponent, AugmentedComponent1, AugmentedComponent2;\n\n      function baseMixin() {\n        this.attributes({core: 35});\n        this.fn1 = function() {\n          testString1 += \"testString1\"; return testString1\n        };\n        this.fn2 = function() {\n          testString2 += \"testString2\"; return testString2\n        };\n      }\n\n      function augmentingMixin1() {\n        this.attributes({attr1: {thing: 4}});\n        this.before('fn1', function() {\n          testString1 += \"augmented \"\n        });\n        this.fn3 = function() {\n          testString3 += \"testString3\"; return testString3\n        };\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":173,"to":198}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["138",{"pageContent":"function augmentingMixin2() {\n        this.attributes({attr1: {thing: 5}});\n        this.before('fn1', function() {\n          testString1 += \"augmented \"\n        });\n        this.fn3 = function() {\n          testString3 += \"testString3\"; return testString3\n        };\n      }\n\n      function initData() {\n        testString1 = \"\";\n        testString2 = \"\";\n        testString3 = \"\";\n      }\n\n      beforeEach(function () {\n        initData();\n        TestComponent = defineComponent(testComponent, baseMixin);\n      });\n\n      afterEach(function () {\n        TestComponent.teardownAll();\n        AugmentedComponent1 && AugmentedComponent1.teardownAll();\n        AugmentedComponent2 && AugmentedComponent2.teardownAll();\n      });\n\n      it('is a function', function () {\n        expect(typeof TestComponent.mixin).toBe('function');\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":200,"to":229}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["139",{"pageContent":"it('augments a base component', function () {\n        var instance1 = (new TestComponent).initialize(document.body);\n        expect(instance1.fn1()).toBe('testString1');\n        expect(instance1.fn2()).toBe('testString2');\n        expect(instance1.fn3).not.toBeDefined();\n\n        initData();\n\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1);\n\n        var instance2 = (new AugmentedComponent1).initialize(document.body);\n        expect(instance1.fn1()).toBe('testString1');\n        expect(instance1.fn2()).toBe('testString2');\n        expect(instance1.fn3).not.toBeDefined();\n\n        initData();\n\n        expect(instance2.fn1()).toBe('augmented testString1');\n        expect(instance2.fn2()).toBe('testString2');\n        expect(instance2.fn3()).toBe('testString3');\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":231,"to":251}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["140",{"pageContent":"it('cannot re-add an original mixin to an augmented component', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent1.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":253,"to":257}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["141",{"pageContent":"it('can be repeatedly called even when augmenting mixins share properties', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        AugmentedComponent2 = TestComponent.mixin(augmentingMixin2, baseMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent2.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(AugmentedComponent1.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n        expect(AugmentedComponent2.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n        expect(typeof AugmentedComponent1.prototype.fn3).toBe(\"function\");\n        expect(typeof AugmentedComponent2.prototype.fn3).toBe(\"function\");\n        expect(AugmentedComponent1.prototype.attrDef.prototype.attr1).toEqual({thing: 4});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":259,"to":268}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["142",{"pageContent":"expect(AugmentedComponent1.prototype.attrDef.prototype.attr1).toEqual({thing: 4});\n        expect(AugmentedComponent1.prototype.attrDef.prototype.constructor.prototype.core).toEqual(35);\n        expect(AugmentedComponent2.prototype.attrDef.prototype.attr1).toEqual({thing: 5});\n        expect(AugmentedComponent2.prototype.attrDef.prototype.constructor.prototype.core).toEqual(35);\n        expect(AugmentedComponent1.prototype.fn3 === AugmentedComponent2.prototype.fn3).toBe(false);\n        expect(AugmentedComponent1.prototype.attrDef.prototype.attr1 === AugmentedComponent2.prototype.attrDef.prototype.attr1).toBe(false);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":268,"to":274}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["143",{"pageContent":"it('(the AugmentedComponent) can be further augmented', function () {\n        AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n        var anotherMixin = function() {};\n        var MoreAugmentedComponent = AugmentedComponent1.mixin(anotherMixin);\n        expect(AugmentedComponent1.prototype.mixedIn.length).toBe(TestComponent.prototype.mixedIn.length + 1);\n        expect(MoreAugmentedComponent.prototype.mixedIn.length).toBe(AugmentedComponent1.prototype.mixedIn.length + 1);\n        expect(MoreAugmentedComponent.prototype.mixedIn.filter(function(e) {return e === baseMixin}).length).toBe(1);\n      });\n\n      it('(the AugmentedComponent) can describe itself', function () {\n          AugmentedComponent1 = TestComponent.mixin(augmentingMixin1, baseMixin);\n          expect(AugmentedComponent1.toString()).toBe('testComponent, baseMixin, augmentingMixin1');\n      });\n\n    });\n\n    describe('teardownAll', function () {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":276,"to":292}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["144",{"pageContent":"});\n\n    describe('teardownAll', function () {\n\n      it('should teardown all instances', function () {\n        var TestComponent = defineComponent(testComponent);\n        var instance1 = (new TestComponent).initialize(document.body);\n        var instance2 = (new TestComponent).initialize(document.body);\n        spyOn(instance1, 'teardown').andCallThrough();\n        spyOn(instance2, 'teardown').andCallThrough();\n        TestComponent.teardownAll();\n        expect(instance1.teardown).toHaveBeenCalled();\n        expect(instance2.teardown).toHaveBeenCalled();\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":290,"to":303}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["145",{"pageContent":"it('should support teardowns that cause other teardowns', function () {\n        var TestComponent = defineComponent(testComponent);\n        var instance1 = (new TestComponent).initialize(document.body);\n        var instance2 = (new TestComponent).initialize(document.body);\n        var original = instance1.teardown;\n        instance1.teardown = function () {\n          instance2.teardown();\n          original.call(this);\n        }.bind(instance1);\n        expect(function () {\n          TestComponent.teardownAll();\n        }).not.toThrow();\n      });\n\n    });\n  });\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/constructor_spec.js","loc":{"lines":{"from":305,"to":321}},"filePath":"test/spec/constructor_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["146",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/registry'], function (defineComponent, registry) {\n\n  describe(\"(Core) events\", function () {\n    var Component = (function () {\n      function testComponent() {\n        this.exampleMethod = jasmine.createSpy();\n        this.after('initialize', function () {\n          this.testString || (this.testString = \"\");\n          this.testString += \"-initBase-\";\n        });\n      }\n\n      return defineComponent(testComponent, withTestMixin1, withTestMixin2);\n    })();\n\n    function withTestMixin1() {\n      this.testVal = 69;\n      this.after('initialize', function () {\n        this.testString || (this.testString = \"\");\n        this.testString += \"-initTestMixin1-\";\n      });\n    }\n\n    function withTestMixin2() {\n      this.after('initialize', function () {\n        this.testString || (this.testString = \"\");\n        this.testString += \"-initTestMixin1-\";\n      });\n    }\n\n    //////////////////////////////////////","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":1,"to":33}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["147",{"pageContent":"//////////////////////////////////////\n\n    beforeEach(function () {\n      window.outerDiv = document.createElement('div');\n      window.anotherDiv = document.createElement('div');\n      window.innerDiv = document.createElement('div');\n      window.outerDiv.appendChild(window.innerDiv);\n      document.body.appendChild(window.outerDiv);\n      document.body.appendChild(window.anotherDiv);\n    });\n    afterEach(function () {\n      document.body.removeChild(window.outerDiv);\n      document.body.removeChild(window.anotherDiv);\n      window.outerDiv = null;\n      window.innerDiv = null;\n      Component.teardownAll();\n    });\n\n    it('bubbles native events between components', function () {\n      var instance1 = (new Component).initialize(window.innerDiv);\n      var instance2 = (new Component).initialize(window.outerDiv);\n\n      var spy = jasmine.createSpy();\n      instance2.on('click', spy);\n      instance1.trigger('click');\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":33,"to":59}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["148",{"pageContent":"it('can trigger from a specific node', function () {\n      var instance1 = (new Component).initialize(window.innerDiv);\n      var instance2 = (new Component).initialize(window.outerDiv);\n      var instance3 = (new Component).initialize(document);\n      var spy1, spy2;\n\n      //raw node\n      spy1 = jasmine.createSpy();\n      instance2.on('click', spy1);\n      spy2 = jasmine.createSpy();\n      instance3.on('click', spy2);\n      instance1.trigger(document, 'click', {a:2, b:3});\n      expect(spy1).not.toHaveBeenCalled();\n      expect(spy2).toHaveBeenCalled();\n\n      //raw node, no payload\n      spy1 = jasmine.createSpy();\n      instance2.on('click', spy1);\n      spy2 = jasmine.createSpy();\n      instance3.on('click', spy2);\n      instance1.trigger(document, 'click');\n      expect(spy1).not.toHaveBeenCalled();\n      expect(spy2).toHaveBeenCalled();","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":61,"to":83}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["149",{"pageContent":"//selector\n      spy1 = jasmine.createSpy();\n      instance2.on('click', spy1);\n      spy2 = jasmine.createSpy();\n      instance3.on('click', spy2);\n      instance1.trigger('body', 'click', {a:2});\n      expect(spy1).not.toHaveBeenCalled();\n      expect(spy2).toHaveBeenCalled();\n\n      //JQuery object\n      spy1 = jasmine.createSpy();\n      instance2.on('click', spy1);\n      spy2 = jasmine.createSpy();\n      instance3.on('click', spy2);\n      instance1.trigger($(document.body), 'click', {a:2});\n      expect(spy1).not.toHaveBeenCalled();\n      expect(spy2).toHaveBeenCalled();\n    });\n\n    it('proxy from one to another when declared using \"on\" with a string', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      var data = {actor: 'Brent Spiner'};\n\n      // Declare an event proxy from 'sourceEvent' â†’ 'targetEvent'\n      instance.on('sourceEvent', 'targetEvent');\n\n      var spy = jasmine.createSpy();\n      instance.on('targetEvent', spy);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":85,"to":112}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["150",{"pageContent":"var spy = jasmine.createSpy();\n      instance.on('targetEvent', spy);\n\n      instance.trigger('sourceEvent', data);\n\n      expect(spy).toHaveBeenCalled();\n      expect(spy.mostRecentCall.args[1]).toEqual(data);\n    });\n\n    it('proxy from one to another when declared using \"on\" with an object', function () {\n      var instance = (new Component).initialize(window.outerDiv, {'innerDiv': 'div'});\n      var data = {actor: 'Brent Spiner'};\n\n      // Declare an event proxy from 'sourceEvent' Ã¢â€ â€™ 'targetEvent'\n      instance.on('sourceEvent', {\n        'innerDiv': 'targetEvent'\n      });\n\n      var spy = jasmine.createSpy();\n      instance.on(window.innerDiv, 'targetEvent', spy);\n\n      instance.trigger(window.innerDiv, 'sourceEvent', data);\n\n      expect(spy).toHaveBeenCalled();\n      expect(spy.mostRecentCall.args[1]).toEqual(data);\n    });\n\n    it('unbinds listeners using \"off\"', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":111,"to":139}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["151",{"pageContent":"var spy = jasmine.createSpy();\n      instance1.on('click', spy);\n      instance1.off('click', spy);\n      instance1.trigger('click');\n      expect(spy).not.toHaveBeenCalled();\n    });\n\n    it('correctly unbinds multiple registered events for the same callback function using \"off\"', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy = jasmine.createSpy();\n      instance1.on(document, 'event1', spy);\n      instance1.on(document, 'event2', spy);\n      instance1.off(document, 'event1', spy);\n      instance1.off(document, 'event2', spy);\n      instance1.trigger('event1');\n      instance1.trigger('event2');\n      expect(spy).not.toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":141,"to":158}},"filePath":"test/spec/events_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["152",{"pageContent":"it('retains one binding when another is removed for multiple registered events for the same callback function using \"off\"', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy = jasmine.createSpy();\n      instance1.on(document, 'event1', spy);\n      instance1.on(document, 'event2', spy);\n      instance1.off(document, 'event1', spy);\n      instance1.trigger('event2');\n      expect(spy).toHaveBeenCalled();\n    });\n\n    it('removes the binding when \"off\" is supplied with a bound callback', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy = jasmine.createSpy();\n      instance1.on(document, 'event1', spy);\n      var boundCb = registry.findInstanceInfo(instance1).events.filter(function(e) {\n        return e.type == \"event1\"\n       })[0].callback;\n      instance1.off(document, 'event1', boundCb);\n      instance1.trigger('event1');\n      expect(spy).not.toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":160,"to":180}},"filePath":"test/spec/events_spec.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["153",{"pageContent":"it('retains one binding when another is removed for multiple registered events for the same callback function when \"off\" is supplied with a bound callback', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy = jasmine.createSpy();\n      instance1.on(document, 'event1', spy);\n      instance1.on(document, 'event2', spy);\n      var boundCb = registry.findInstanceInfo(instance1).events.filter(function(e) {\n        return e.type == \"event1\"\n       })[0].callback;\n      instance1.off(document, 'event1', boundCb);\n      instance1.trigger('event2');\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":182,"to":193}},"filePath":"test/spec/events_spec.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["154",{"pageContent":"it('does not unbind those registered events that share a callback, but were not sent \"off\" requests', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy = jasmine.createSpy();\n      instance1.on(document, 'event1', spy);\n      instance1.on(document, 'event2', spy);\n      instance1.off(document, 'event1', spy);\n      instance1.trigger('event2');\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":195,"to":203}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["155",{"pageContent":"it('does not unbind those registered events that share a callback, but were not sent \"off\" requests (when \"off\" is supplied with a bound callback)', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var instance2 = (new Component).initialize(window.anotherDiv);\n      var spy1 = jasmine.createSpy();\n      instance1.on(document, 'event1', spy1);\n      var spy2 = jasmine.createSpy();\n      instance1.on(document, 'event1', spy2);\n      var boundCb = registry.findInstanceInfo(instance1).events.filter(function(e) {\n        return e.type == \"event1\"\n      })[0].callback;\n      instance1.off(document, 'event1', boundCb);\n      instance1.trigger('event1');\n      expect(spy2).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":205,"to":218}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["156",{"pageContent":"it('does not unbind event handlers which share a node and were registered by the same instance', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var spy1 = jasmine.createSpy();\n      instance1.on(document, 'event1', spy1);\n      var spy2 = jasmine.createSpy();\n      instance1.on(document, 'event1', spy2);\n      instance1.off(document, 'event1', spy1);\n      instance1.trigger('event1');\n      expect(spy2).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":220,"to":229}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["157",{"pageContent":"it('does not unbind event handlers which share a node but were registered by different instances', function () {\n      var instance1 = (new Component).initialize(window.outerDiv);\n      var instance2 = (new Component).initialize(window.anotherDiv);\n      var spy1 = jasmine.createSpy();\n      instance1.on(document, 'event', spy1);\n      var spy2 = jasmine.createSpy();\n      instance2.on(document, 'event', spy2);\n      instance2.off(document, 'event');\n      instance1.trigger('event');\n      expect(spy1).toHaveBeenCalled();\n      expect(spy2).not.toHaveBeenCalled();\n    });\n\n    it('bubbles custom events between components', function () {\n      var instance1 = (new Component).initialize(window.innerDiv);\n      var instance2 = (new Component).initialize(window.outerDiv);\n\n      var spy = jasmine.createSpy();\n      instance2.on('click', spy);\n      instance1.trigger('click');\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":231,"to":252}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["158",{"pageContent":"it('can be attached to any element', function () {\n      var instance1 = (new Component).initialize(window.innerDiv);\n      var instance2 = (new Component).initialize(window.outerDiv);\n\n      var spy = jasmine.createSpy();\n      instance2.on(document, 'click', spy);\n      instance1.trigger('click');\n      expect(spy).toHaveBeenCalled();\n    });\n\n    it('makes data and target element available to callback', function () {\n      var instance = (new Component).initialize(document.body);\n      var data = {blah: 'blah'};\n\n      var spy = jasmine.createSpy();\n      instance.on(document, 'foo', spy);\n      instance.trigger('foo', data);\n      var args = spy.mostRecentCall.args;\n      expect(args[0]).toEqual(jasmine.any($.Event));\n      expect(args[1]).toEqual(data);\n    });\n\n    it('ignores data parameters with value of undefined', function () {\n      var instance = (new Component).initialize(document.body);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":254,"to":277}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["159",{"pageContent":"var spy = jasmine.createSpy();\n      instance.on(document, 'foo', spy);\n      instance.trigger('foo', undefined);\n      var args = spy.mostRecentCall.args;\n      expect(args[0]).toEqual(jasmine.any($.Event));\n      expect(args[1]).not.toBeDefined();\n    });\n\n    it('throws the expected error when attempting to bind to wrong type', function () {\n      var instance = (new Component).initialize(document.body);\n      var badBind = function () {\n        instance.on(document, 'foo', 1234);\n      };\n      expect(badBind).toThrow('Unable to bind to \"foo\" because the given callback is not a function or an object');\n    });\n\n    it('merges eventData into triggered event data', function () {\n      var instance = (new Component).initialize(document.body, { eventData: { penguins: 'cool', sheep: 'dull' } });\n      var data = { sheep: 'thrilling' };","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":279,"to":297}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["160",{"pageContent":"var spy = jasmine.createSpy();\n      instance.on(document, 'foo', spy);\n      instance.trigger('foo', data);\n      var args = spy.mostRecentCall.args;\n      var returnedData = args[1];\n      expect(returnedData.penguins).toBeDefined();\n      expect(returnedData.penguins).toBe('cool');\n      expect(returnedData.sheep).toBeDefined();\n      expect(returnedData.sheep).toBe('thrilling');\n    });\n\n    it('executes the specified method when specified', function () {\n      var instance = (new Component).initialize(document.body);\n      instance.someMethod = jasmine.createSpy();\n      instance.trigger({ type: 'foo', defaultBehavior: 'someMethod' });\n      expect(instance.someMethod).toHaveBeenCalled();\n    });\n\n    it('executes the specified function when specified', function () {\n      var instance = (new Component).initialize(document.body);\n      var spy = jasmine.createSpy();\n      instance.trigger({ type: 'foo', defaultBehavior: spy });\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":299,"to":322}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["161",{"pageContent":"it('does not execute the specified method when a listener calls preventDefault', function () {\n      var instance = (new Component).initialize(document.body);\n      instance.someMethod = jasmine.createSpy();\n\n      instance.on('foo', function (e) {\n        e.preventDefault();\n      });\n\n      instance.trigger({ type: 'foo', defaultBehavior: 'someMethod' });\n      expect(instance.someMethod).not.toHaveBeenCalled();\n    });\n\n    it('does not execute the specified function when a listener calls preventDefault', function () {\n      var instance = (new Component).initialize(document.body);\n      var spy = jasmine.createSpy();\n\n      instance.on('foo', function (e) {\n        e.preventDefault();\n      });\n\n      instance.trigger({ type: 'foo', defaultBehavior: spy });\n      expect(spy).not.toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":324,"to":346}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["162",{"pageContent":"it('merges eventData into triggered default behavior event data', function () {\n      var instance = (new Component).initialize(document.body, { eventData: { penguins: 'cool', sheep: 'dull' } });\n      var data = { sheep: 'thrilling' };\n\n      var spy = jasmine.createSpy();\n      instance.trigger({ type: 'foo', defaultBehavior: spy }, data);\n      var args = spy.mostRecentCall.args;\n      var returnedData = args[1];\n      expect(returnedData.penguins).toBeDefined();\n      expect(returnedData.penguins).toBe('cool');\n      expect(returnedData.sheep).toBeDefined();\n      expect(returnedData.sheep).toBe('thrilling');\n    });\n\n  });\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/events_spec.js","loc":{"lines":{"from":348,"to":363}},"filePath":"test/spec/events_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["163",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/advice'], function (defineComponent, advice) {\n\n  var Component = (function () {\n    return defineComponent(function fnTest() {\n    });\n  })();\n\n  describe('(Core) advice', function () {\n\n    afterEach(function () {\n      Component.teardownAll();\n    });\n\n    it('should call the \"before\" function before the base function and return the base function', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.before(base, function (arg) {\n        test1 += \"Before: \" + arg + ', ';\n        return 'before';\n      });\n\n      expect(advised('Dan')).toBe('base');\n      expect(test1).toBe('Before: Dan, Base: Dan');\n    });\n\n    it('should call the \"after\" function after the base function, but return the base function', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/fn_spec.js","loc":{"lines":{"from":1,"to":39}},"filePath":"test/spec/fn_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["164",{"pageContent":"function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.after(base, function (arg) {\n        test1 += \", After: \" + arg;\n        return 'after';\n      });\n\n      expect(advised('Dan')).toBe('base');\n      expect(test1).toBe('Base: Dan, After: Dan');\n    });\n\n    it('should wrap the the first \"around\" argument with the second argument', function () {\n      var test1 = \"\";\n\n      function base(arg) {\n        test1 += 'Base: ' + arg;\n        return 'base';\n      }\n\n      var advised = advice.around(base, function (orig, arg) {\n        test1 += '|';\n        orig(arg);\n        test1 += '|';\n        return 'around';\n      });\n\n      expect(advised('Dan')).toBe('around');\n      expect(test1).toBe('|Base: Dan|');\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/fn_spec.js","loc":{"lines":{"from":36,"to":67}},"filePath":"test/spec/fn_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["165",{"pageContent":"expect(advised('Dan')).toBe('around');\n      expect(test1).toBe('|Base: Dan|');\n    });\n\n    describe(\"withAdvice\", function () {\n      it('should add \"before\", \"after\" and \"around\" to an object', function () {\n        var subject = {\n          testa: '',\n          testb: '',\n          testc: '',\n          a: function () {\n            this.testa += 'A!';\n          },\n          b: function () {\n            this.testb += 'B!';\n          },\n          c: function () {\n            this.testc += 'C!';\n          }\n        }\n\n        advice.withAdvice.call(subject);\n\n        subject.before('a', function () {\n          this.testa += 'BEFORE!';\n        });\n\n        subject.after('b', function () {\n          this.testb += 'AFTER!';\n        });\n\n        subject.around('c', function (orig) {\n          this.testc += '|';\n          orig.call(subject);\n          this.testc += '|';\n        });\n\n        subject.a();\n        expect(subject.testa).toBe('BEFORE!A!');","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/fn_spec.js","loc":{"lines":{"from":65,"to":103}},"filePath":"test/spec/fn_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["166",{"pageContent":"subject.a();\n        expect(subject.testa).toBe('BEFORE!A!');\n\n        subject.b();\n        expect(subject.testb).toBe('B!AFTER!');\n\n        subject.c();\n        expect(subject.testc).toBe('|C!|');\n      });\n    });\n\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/fn_spec.js","loc":{"lines":{"from":102,"to":115}},"filePath":"test/spec/fn_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["167",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/registry'], function (defineComponent, registry) {\n\n  var testString = \"\";\n  var Component = (function () {\n    function testComponent() {\n      this.attributes({\n        foo: 1,\n        bar: 1\n      });\n\n      this.after('initialize', function () {\n        testString = testString || \"\";\n        testString += \"-initBase-\";\n      });\n    }\n\n    return defineComponent(testComponent, withTestMixin1, withTestMixin2);\n  })();\n\n  var Component2 = defineComponent();\n\n  function withTestMixin1() {\n    this.testVal = 69;\n    this.after('initialize', (function () {\n      testString = testString || \"\";\n      testString += \"-initTestMixin1-\";\n    }).bind(this));\n  }\n\n  ;\n\n  function withTestMixin2(input) {\n    this.testArray = [24, 79];\n    this.testFunction = function () {\n      return input;\n    }\n    this.after('initialize', function () {\n      testString = testString || \"\";\n      testString += \"-initTestMixin2-\";\n    });\n  }\n\n  ;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":1,"to":45}},"filePath":"test/spec/instance_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["168",{"pageContent":";\n\n  describe('(Core) instance', function () {\n    beforeEach(function () {\n      window.outerDiv = document.createElement('div');\n      window.innerDiv = document.createElement('div');\n      window.outerDiv.className = window.innerDiv.className = \"test-node\";\n      window.outerDiv.appendChild(window.innerDiv);\n      document.body.appendChild(window.outerDiv);\n    });\n    afterEach(function () {\n      document.body.removeChild(window.outerDiv);\n      window.outerDiv = null;\n      window.innerDiv = null;\n      Component.teardownAll();\n      Component2.teardownAll();\n    });\n\n    it('should reference supplied node in new instance', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      expect(instance.node).toBe(window.outerDiv);\n    });\n\n    it('should throw an exception if .on is given an invalid callback', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n\n      function definedCallback() {\n      }","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":45,"to":72}},"filePath":"test/spec/instance_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["169",{"pageContent":"function definedCallback() {\n      }\n\n      expect(function () {\n        instance.on('click', definedCallback);\n      }).not.toThrow();\n\n      expect(function () {\n        instance.on('click', undefinedCallback);\n      }).toThrow();\n    });\n\n    it('should create instances for each element matching the given selector', function () {\n      var registryTestComponentInfo = registry.findComponentInfo(Component);\n      var sizeThen = registryTestComponentInfo ? registryTestComponentInfo.instances.length : 0;\n      Component.attachTo('.test-node');\n      var sizeNow = Object.keys(registry.findComponentInfo(Component).instances).length;\n      expect(sizeNow).toBe(sizeThen + 2);\n    });\n\n    it('references expected nodes when we attach to div', function () {\n      Component.attachTo('.test-node');\n      expect(registry.findInstanceInfoByNode(window.outerDiv)).toBeTruthy();\n      expect(registry.findInstanceInfoByNode(window.innerDiv)).toBeTruthy();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":71,"to":95}},"filePath":"test/spec/instance_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["170",{"pageContent":"it('calls initializers in the correct order', function () {\n      testString = \"\";\n      var instance = (new Component).initialize(window.outerDiv);\n      expect(testString).toBe(\"-initBase--initTestMixin1--initTestMixin2-\");\n    });\n\n    describe('multiple instances', function () {\n      it('should only attach once when multiple instances of the same Component are attached to the same DOM node', function () {\n        Component.attachTo('body');\n        Component.attachTo('body');\n        expect(Object.keys(registry.findComponentInfo(Component).instances).length).toBe(1);\n      });\n\n      it('should attach all instances when the same Component is attached to different nodes', function () {\n        Component.attachTo('body');\n        Component.attachTo(document);\n        expect(Object.keys(registry.findComponentInfo(Component).instances).length).toBe(2);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":97,"to":114}},"filePath":"test/spec/instance_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["171",{"pageContent":"it('should attach all instances when different Components are attached to the same node', function () {\n        Component.attachTo('body');\n        Component2.attachTo('body');\n        expect(Object.keys(registry.findComponentInfo(Component).instances).length).toBe(1);\n        expect(Object.keys(registry.findComponentInfo(Component2).instances).length).toBe(1);\n      });\n\n      it('should merge multiple options arguments correctly', function () {\n        Component.attachTo('.test-node', {foo: 46}, {bar: 48});\n        var firstKey = Object.keys(registry.findComponentInfo(Component).instances)[0];\n        var c = registry.findComponentInfo(Component).instances[firstKey].instance;\n        expect(c.attr.foo).toBe(46);\n        expect(c.attr.bar).toBe(48);\n      });\n\n      it('should not throw an exception if .teardown is called more than once', function () {\n        var instance = (new Component).initialize(window.outerDiv);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":116,"to":132}},"filePath":"test/spec/instance_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["172",{"pageContent":"expect(function () {\n          instance.teardown();\n        }).not.toThrow();\n\n        expect(function () {\n          instance.teardown();\n        }).not.toThrow();\n      });\n    });\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/instance_spec.js","loc":{"lines":{"from":134,"to":145}},"filePath":"test/spec/instance_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["173",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/debug'], function(defineComponent, debug) {\n\n  var instance;\n  var Component;\n  var div = $('<div class=\"myDiv\"></div>').appendTo('body')[0];\n  var span = $('<span class=\"mySpan\"></span>').appendTo('body')[0];\n\n  describe('(Core) logger', function () {\n\n    beforeEach(function () {\n      debug.enable(true);\n      debug.events.logAll();\n      Component = (function () {\n        return defineComponent(function() {\n          this.handler = function() {};\n        });\n      })();\n      instance = (new Component).initialize(div);\n    });\n\n    afterEach(function () {\n      debug.enable(false);\n      debug.events.logNone();\n      Component.teardownAll();\n    });\n\n    describe('trigger logging', function () {\n      it('logs trigger for default node', function () {\n        spyOn(console, 'info');\n        instance.trigger('click');\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', '\\'div.myDiv\\'', '');\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":1,"to":34}},"filePath":"test/spec/logger_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["174",{"pageContent":"it('logs trigger for custom node', function () {\n        spyOn(console, 'info');\n        instance.trigger('document', 'click');\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', 'document', '');\n      });\n\n      it('logs trigger with payload', function () {\n        var data = {a:2};\n        spyOn(console, 'info');\n        instance.trigger('click', data);\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', data, '\\'div.myDiv\\'', '');\n      });\n\n      it('logs trigger with event object', function () {\n        spyOn(console, 'info');\n        instance.trigger({type:'click'});\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', '\\'div.myDiv\\'', '');\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":36,"to":53}},"filePath":"test/spec/logger_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["175",{"pageContent":"it('logs trigger for custom node with event object', function () {\n        spyOn(console, 'info');\n        instance.trigger('document', {type:'click'});\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', 'document', '');\n      });\n\n      it('logs trigger with event object and payload', function () {\n        var data = {a:2};\n        spyOn(console, 'info');\n        instance.trigger({type:'click'}, data);\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', data, '\\'div.myDiv\\'', '');\n      });\n\n      it('logs trigger for custom node with event object and payload', function () {\n        var data = {a:2};\n        spyOn(console, 'info');\n        instance.trigger('document', {type:'click'}, data);\n        expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[click]', data, 'document', '');\n      });\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":55,"to":74}},"filePath":"test/spec/logger_spec.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["176",{"pageContent":"describe('on logging', function () {\n      it('logs on events for default node', function () {\n        spyOn(console, 'info');\n        instance.on('start', instance.handler);\n        expect(console.info).toHaveBeenCalledWith('<-', 'on', '[start]', '\\'div.myDiv\\'', '');\n      });\n\n      it('logs on events for custom node', function () {\n        spyOn(console, 'info');\n        instance.on('body', 'start', instance.handler);\n        expect(console.info).toHaveBeenCalledWith('<-', 'on', '[start]', 'body', '');\n      });\n    });\n\n    describe('off logging', function () {\n      it('logs off events for default node and no handler', function () {\n        spyOn(console, 'info');\n        instance.off('start');\n        expect(console.info).toHaveBeenCalledWith('x ', 'off', '[start]', '\\'div.myDiv\\'', '');\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":76,"to":95}},"filePath":"test/spec/logger_spec.js","complexity":4,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["177",{"pageContent":"it('logs off events for default node with handler', function () {\n        spyOn(console, 'info');\n        instance.off('start', instance.handler);\n        expect(console.info).toHaveBeenCalledWith('x ', 'off', '[start]', '\\'div.myDiv\\'', '');\n      });\n\n      it('logs off events for custom node with handler', function () {\n        spyOn(console, 'info');\n        instance.off('.mySpan', 'start', instance.handler);\n        expect(console.info).toHaveBeenCalledWith('x ', 'off', '[start]', '.mySpan', '');\n      });\n    });\n\n    describe('log filters', function () {\n      it('only logs filtered actions', function () {\n        debug.events.logByAction('on', 'off');\n        spyOn(console, 'info');\n        instance.trigger('click');\n        expect(console.info).not.toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.on('click', instance.handler);\n        expect(console.info).toHaveBeenCalled();","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":97,"to":120}},"filePath":"test/spec/logger_spec.js","complexity":3,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["178",{"pageContent":"console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.off('click', instance.handler);\n        expect(console.info).toHaveBeenCalled();\n      });\n\n      it('only logs filtered event names', function () {\n        debug.events.logByName('click', 'clack');\n        spyOn(console, 'info');\n        instance.trigger('click');\n        expect(console.info).toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.on('clack', instance.handler);\n        expect(console.info).toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.off('cluck', instance.handler);\n        expect(console.info).not.toHaveBeenCalled();\n      });\n\n      it('only logs filtered event objects', function () {\n        debug.events.logByName('click', 'clack');\n        spyOn(console, 'info');\n        instance.trigger({type:'click'});\n        expect(console.info).toHaveBeenCalled();","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":122,"to":149}},"filePath":"test/spec/logger_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["179",{"pageContent":"console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.on({type:'clack'}, instance.handler);\n        expect(console.info).toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.off({type:'cluck'}, instance.handler);\n        expect(console.info).not.toHaveBeenCalled();\n      });\n\n      it('logs nothing when filter set to none', function () {\n        debug.events.logNone();\n        spyOn(console, 'info');\n        instance.trigger('click');\n        expect(console.info).not.toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.on('click', instance.handler);\n        expect(console.info).not.toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.off('click', instance.handler);\n        expect(console.info).not.toHaveBeenCalled();","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":151,"to":176}},"filePath":"test/spec/logger_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["180",{"pageContent":"console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.trigger('click');\n        expect(console.info).not.toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.on('clack', instance.handler);\n        expect(console.info).not.toHaveBeenCalled();\n\n        console.info.isSpy = false;\n        spyOn(console, 'info');\n        instance.off('cluck', instance.handler);\n        expect(console.info).not.toHaveBeenCalled();\n      });\n    });\n  });\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/logger_spec.js","loc":{"lines":{"from":178,"to":195}},"filePath":"test/spec/logger_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["181",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/utils', 'lib/compose'], function (defineComponent, utils, compose) {\n\n  describe('(Core) mixin', function () {\n\n    //var canWriteProtect = !utils.isEnumerable(Object, 'getOwnPropertyDescriptor');\n\n    //TODO: temporarily turn off this until we resolvle IE8 and legacy clobbering\n    var canWriteProtect = false;\n\n    it('should throw an exception if a mixin tries to overwrite a property', function () {\n      var mixItIn = function () {\n        defineComponent(function () {\n          this.myProperty = 23\n        }, function () {\n          this.myProperty = 38\n        });\n      };\n\n      if (canWriteProtect) {\n        expect(mixItIn).toThrow(\"Cannot assign to read only property 'myProperty' of #<Component>\");\n      } else {\n        expect(mixItIn).not.toThrow();\n      }\n    });\n\n    it('should not mix in the same mixin twice', function () {\n      var base = {mixedInCount: 0};","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/mixin_spec.js","loc":{"lines":{"from":1,"to":29}},"filePath":"test/spec/mixin_spec.js","complexity":3,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["182",{"pageContent":"it('should not mix in the same mixin twice', function () {\n      var base = {mixedInCount: 0};\n\n      var mixMeIn = function () {\n        this.mixedInCount++\n      };\n      var mixMeToo = function () {\n        this.mixedInCount++\n      };\n\n      compose.mixin(base, [mixMeIn]);\n      compose.mixin(base, [mixMeIn]);\n      compose.mixin(base, [mixMeToo]);\n      compose.mixin(base, [mixMeToo]);\n\n      expect(base.mixedInCount).toBe(2);\n    });\n\n    it('should be able to mix into an object created from null', function () {\n      var mixMeIn = function () {\n        this.foo = 'bar';\n      };\n\n      var base = Object.create(null);\n      compose.mixin(base, [mixMeIn]);\n      expect(base.foo).toBe('bar');\n    });\n\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/mixin_spec.js","loc":{"lines":{"from":28,"to":58}},"filePath":"test/spec/mixin_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["183",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/registry'], function (defineComponent, registry) {\n\n  var Component = (function () {\n    function testComponent() {\n    }\n\n    return defineComponent(testComponent);\n  })();\n\n  describe('(Core) registry', function () {\n\n    beforeEach(function () {\n      window.outerDiv = document.createElement('div');\n      window.innerDiv = document.createElement('div');\n      window.outerDiv.appendChild(window.innerDiv);\n      document.body.appendChild(window.outerDiv);\n    });\n    afterEach(function () {\n      document.body.removeChild(window.outerDiv);\n      window.outerDiv = null;\n      window.innerDiv = null;\n      Component.teardownAll();\n    });\n\n    it('registers new components', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n\n      expect(registry.components.length).toBe(1);\n      expect(Object.keys(registry.allInstances).length).toBe(1);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":1,"to":31}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["184",{"pageContent":"expect(registry.allInstances[instance.identity].instance).toBe(instance);\n    });\n\n    it('has correct ComponentInfo', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      var firstKey = Object.keys(registry.findComponentInfo(Component).instances)[0];\n\n      expect(registry.components.length).toBe(1);\n      expect(registry.components[0].component).toBe(Component);\n      expect(Object.keys(registry.components[0].instances).length).toBe(1);\n      expect(registry.components[0].instances[firstKey].instance).toBe(instance);\n    });\n\n    it('has correct InstanceInfo', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      var instanceInfo = registry.allInstances[instance.identity];\n      expect(instanceInfo.instance).toBe(instance);\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":33,"to":50}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["185",{"pageContent":"it('registers/unregisters InstanceInfo events', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      var instanceInfo = registry.allInstances[instance.identity];\n\n      var myFunction = $.noop;\n      instance.on(\"myEvent\", myFunction);\n      expect(instanceInfo.events.length).toBe(1);\n\n      var event = instanceInfo.events[0];\n      expect(event.element).toBe(instance.node);\n      expect(event.type).toBe(\"myEvent\");\n      expect(event.callback.target).toBe(myFunction);\n\n      instance.off(\"myEvent\");\n      expect(instanceInfo.events.length).toBeFalsy();\n    });\n\n    it('removes instances when we call removeInstanceInfo', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      var instanceInfo = registry.allInstances[instance.identity];\n\n      var previousNumberOfComponents = registry.components.length;\n      var previousNumberOfInstances = Object.keys(registry.allInstances).length;","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":52,"to":74}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["186",{"pageContent":"registry.removeInstance(instance);\n\n      expect(registry.components.length).toBe(previousNumberOfComponents - 1);\n      expect(Object.keys(registry.allInstances).length).toBe(previousNumberOfInstances - 1);\n    });\n\n    it('can find components with findComponentInfo', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n\n      //pass constructor\n      expect(registry.findComponentInfo(Component).component).toBe(Component);\n      //pass instance\n      expect(registry.findComponentInfo(instance).component).toBe(Component);\n    });\n\n    it('can find instances with findInstanceInfo', function () {\n      var instance = (new Component).initialize(window.outerDiv);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":76,"to":92}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["187",{"pageContent":"//pass instance\n      expect(registry.findInstanceInfo(instance).instance).toBe(instance);\n      //pass node\n      expect(registry.findInstanceInfoByNode(window.outerDiv)[0].instance).toBe(instance);\n      //pass phoney instance, find nothing\n      expect(registry.findInstanceInfo({node: window.outerDiv})).toBeNull();\n      //pass phoney node, find nothing\n      expect(registry.findInstanceInfoByNode(window.innerDiv).length).toBeFalsy();\n    });\n\n    it('generates correct boundEventNames when there are none', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n\n      expect(registry.getBoundEventNames(instance).length).toBe(0);\n    });\n\n    it('generates correct boundEventNames when there are some', function () {\n      var instance = (new Component).initialize(window.outerDiv);\n      instance.on('click', function() {});\n      instance.on(document, 'click', function() {});\n      instance.on('customEvent', function() {});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":94,"to":114}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["188",{"pageContent":"expect(registry.getBoundEventNames(instance).length).toBe(3);\n      expect(registry.getBoundEventNames(instance)).toEqual(['click', 'click', 'customEvent']);\n    });\n  });\n\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/registry_spec.js","loc":{"lines":{"from":116,"to":121}},"filePath":"test/spec/registry_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["189",{"pageContent":"\"use strict\";\n\ndefine(['index'], function(index) {\n  describe('Flight distributed as a single file', function() {\n    it('exports flight as a global', function() {\n      expect(flight).toBeDefined();\n    });\n\n    it('contains the same members as index module', function() {\n      var indexKeys = Object.keys(index);\n\n      expect(Object.keys(flight).length).toBe(indexKeys.length);\n\n      indexKeys.forEach(function(key) {\n        expect(typeof flight[key]).toBe(typeof index[key]);\n      });\n    });\n\n    it('supports debugging via window.DEBUG', function() {\n      flight.debug.enable(true);\n      flight.debug.events.logAll();\n\n      var Component = flight.component(function() {\n        this.after('initialize', function() {\n          this.trigger('an-event');\n        });\n      });\n      var node = document.createElement('div');\n      document.body.appendChild(node);","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/standalone_spec.js","loc":{"lines":{"from":1,"to":29}},"filePath":"test/spec/standalone_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["190",{"pageContent":"spyOn(console, 'info');\n      Component.attachTo(node);\n      expect(console.info).toHaveBeenCalledWith('->', 'trigger', '[an-event]', '\\'div\\'', '');\n    });\n  });\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/standalone_spec.js","loc":{"lines":{"from":31,"to":36}},"filePath":"test/spec/standalone_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["191",{"pageContent":"\"use strict\";\n\ndefine(['lib/component', 'lib/utils', 'lib/debug'], function (defineComponent, utils, debug) {\n\n  describe('(Core) utils', function () {\n\n    describe('toArray()', function () {\n\n      it('converts object to an array', function () {\n        var result;\n\n        function testFn() {\n          result = utils.toArray(arguments);\n        }\n\n        testFn('apple', 'pear');\n\n        expect(Array.isArray(result)).toBe(true);\n        expect(result[0]).toBe('apple');\n        expect(result[1]).toBe('pear');\n        expect(typeof result.push).toBe('function');\n        expect(typeof result.slice).toBe('function');\n        expect(typeof result.splice).toBe('function');\n      });\n\n      it('preserves object length', function () {\n        var result;\n\n        function testFn() {\n          result = utils.toArray(arguments);\n        }\n\n        testFn('apple', 'pear');\n\n        expect(result.length).toBe(2);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":1,"to":36}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["192",{"pageContent":"testFn('apple', 'pear');\n\n        expect(result.length).toBe(2);\n      });\n\n      it('ignores elements before the \"from\" argument', function () {\n        var result;\n\n        function testFn() {\n          result = utils.toArray(arguments, 1);\n        }\n\n        testFn('apple', 'pear');\n\n        expect(result.length).toBe(1);\n        expect(result[0]).toBe('pear');\n      });\n    });\n\n    describe('merge()', function () {\n\n      var merged, foo, boo, moo;\n\n      beforeEach(function () {\n        foo = {a: 32, b: {aa: 33, bb: 94}};\n        boo = {c: 44};\n        moo = {b: {aa: 37, cc: 58}, d: 78};\n      });\n\n      it('creates a copy', function () {\n        merged = utils.merge(foo);\n        //reassign to merged\n        merged = \"monkey\";\n        expect(foo.a).toBe(32);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":33,"to":67}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["193",{"pageContent":"it('merges distinct properties', function () {\n        merged = utils.merge(foo, boo);\n        expect(merged.a).toBe(32);\n        expect(merged.b.aa).toBe(33);\n        expect(merged.b.bb).toBe(94);\n        expect(merged.c).toBe(44);\n      });\n\n      it('recursively merges like properties upon request', function () {\n        merged = utils.merge(foo, moo, true);\n        expect(merged.a).toBe(32);\n        expect(merged.b.aa).toBe(37);\n        expect(merged.b.bb).toBe(94);\n        expect(merged.b.cc).toBe(58);\n        expect(merged.d).toBe(78);\n      });\n\n      it('does not recursively merge when not requested', function () {\n        merged = utils.merge(foo, moo);\n        expect(merged.a).toBe(32);\n        expect(merged.b.aa).toBe(37);\n        expect(merged.b.bb).toBe(undefined);\n        expect(merged.b.cc).toBe(58);\n        expect(merged.d).toBe(78);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":69,"to":93}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["194",{"pageContent":"it('merges more than two objects', function () {\n        merged = utils.merge(foo, boo, moo, true);\n        expect(merged.a).toBe(32);\n        expect(merged.b.aa).toBe(37);\n        expect(merged.b.bb).toBe(94);\n        expect(merged.b.cc).toBe(58);\n        expect(merged.c).toBe(44);\n        expect(merged.d).toBe(78);\n      });\n\n      it('copies extra when base is undefined', function () {\n        merged = utils.merge(undefined, foo);\n        expect(merged).toEqual(foo);\n      });\n\n      it('copies base when extra is undefined', function () {\n        merged = utils.merge(moo, undefined);\n        expect(merged).toEqual(moo);\n      });\n\n      it('returns empty hash when base and extra are undefined', function () {\n        merged = utils.merge(undefined, undefined);\n        expect(typeof merged).toEqual(\"object\");\n        expect(Object.keys(merged).length).toEqual(0);\n      });\n    });\n\n    describe('isDomObj()', function () {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":95,"to":122}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["195",{"pageContent":"describe('isDomObj()', function () {\n\n      it('distinguishes DOM objects from other values', function () {\n        var div = document.createElement('DIV');\n        document.body.appendChild(div);\n\n        //DOM objects\n        expect(utils.isDomObj(window)).toBe(true);\n        expect(utils.isDomObj(document)).toBe(true);\n        expect(utils.isDomObj(document.body)).toBe(true);\n        expect(utils.isDomObj(div)).toBe(true);\n\n        //other objects\n        expect(utils.isDomObj(alert)).toBe(false);\n        expect(utils.isDomObj({})).toBe(false);\n        expect(utils.isDomObj([1, 2, 3])).toBe(false);\n\n        //primitives\n        expect(utils.isDomObj(\"banana\")).toBe(false);\n        expect(utils.isDomObj(\"34\")).toBe(false);\n        expect(utils.isDomObj(true)).toBe(false);\n\n        document.body.removeChild(div);\n        div = null;\n      });\n    });\n\n    describe('push()', function () {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":122,"to":149}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["196",{"pageContent":"describe('push()', function () {\n\n      var foo = {a: 32, b: {aa: 33, bb: 94}};\n      var boo = {c: 44};\n      var moo = {b: {aa: 37, cc: 58}, d: 78};\n\n      it('merges distinct properties', function () {\n        var pushed = utils.push(foo, boo);\n        expect(pushed.a).toBe(32);\n        expect(pushed.b.aa).toBe(33);\n        expect(pushed.b.bb).toBe(94);\n        expect(pushed.c).toBe(44);\n      });\n\n      it('does not overwrite properties when protect is true', function () {\n        expect(function () {\n          utils.push(foo, moo, true);\n        }).toThrow('utils.push attempted to overwrite \"b\" while running in protected mode');\n      });\n\n      it('recursively merges like properties when protect is false', function () {\n        var pushed = utils.push(foo, moo);\n        expect(pushed.a).toBe(32);\n        expect(pushed.b.aa).toBe(37);\n        expect(pushed.b.bb).toBe(94);\n        expect(pushed.b.cc).toBe(58);\n        expect(pushed.d).toBe(78);\n      });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":149,"to":176}},"filePath":"test/spec/utils_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["197",{"pageContent":"it('returns undefined when base is undefined', function () {\n        var pushed = utils.push(undefined, foo);\n        expect(pushed).toBe(undefined);\n      });\n\n      it('returns base when extra is undefined', function () {\n        var pushed = utils.push(moo, undefined);\n        expect(pushed).toBe(moo);\n      });\n    });\n\n  });\n\n  describe('throttle()', function () {\n\n    it('should only call a throttled function once per interval', function () {\n\n      jasmine.Clock.useMock();\n\n      var spy = jasmine.createSpy();\n      var throttledFn = utils.throttle(spy, 500);\n      throttledFn();\n      expect(spy.callCount).toBe(1);\n      throttledFn();\n      expect(spy.callCount).toBe(1);\n      jasmine.Clock.tick(499);\n      expect(spy.callCount).toBe(1);\n      jasmine.Clock.tick(1);\n      expect(spy.callCount).toBe(2);\n    });\n\n  });\n\n  describe('debounce()', function () {\n\n    it('should only call a debounce\\'d function after it has not been called for a given interval', function () {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":178,"to":213}},"filePath":"test/spec/utils_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["198",{"pageContent":"jasmine.Clock.useMock();\n\n      var spy = jasmine.createSpy();\n      var debouncedFn = utils.debounce(spy, 500);\n      debouncedFn();\n      jasmine.Clock.tick(400);\n      expect(spy).not.toHaveBeenCalled();\n      debouncedFn();\n      jasmine.Clock.tick(600);\n      expect(spy).toHaveBeenCalled();\n    });\n  });\n\n  describe('delegate()', function () {\n\n    beforeEach(function () {\n      window.div = document.createElement('div');\n      document.body.appendChild(window.div);\n    });\n    afterEach(function () {\n      document.body.removeChild(window.div);\n      window.div = null;\n      Component.teardownAll();\n    });\n\n    var Component = (function () {\n      return defineComponent(function fnTest() {\n        this.defaultAttrs({\n          bodySelector: null\n        });\n      });\n    })();","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":215,"to":246}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["199",{"pageContent":"it('should pass event, and data (inc. el property) to its callbacks', function () {\n      var instance = (new Component).initialize(document, {'bodySelector': 'body'});\n      var myData = {blah: 'blah'};\n\n      jasmine.Clock.useMock();\n      var spy = jasmine.createSpy();\n      instance.on('click', {bodySelector: spy});\n\n      $(document.body).trigger('click', myData);\n\n      var callbackArgs = spy.mostRecentCall.args;\n      expect(spy).toHaveBeenCalledWith(jasmine.any($.Event), myData);\n      expect(callbackArgs[1].el).toBe(document.body);\n    });\n\n    it('should pass the correct currentTarget', function () {\n      var instance = (new Component).initialize(document, {'bodySelector': 'body'});\n\n      instance.on('click', {\n        bodySelector: function (event) {\n          expect(event.currentTarget).toBe(document.body);\n        }\n      });\n\n      $(window.div).trigger('click');\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":248,"to":273}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["200",{"pageContent":"$(window.div).trigger('click');\n    });\n\n    it('makes \"this\" in delegated function references be the component instance', function () {\n      var instance = (new Component).initialize(document, {'bodySelector': 'body'});\n\n      instance.on('click', {\n        bodySelector: function (event) {\n          expect(this).toBe(instance);\n        }\n      });\n\n      $(document.body).trigger('click');\n\n    });\n\n    it('should invoke all matching handlers if stopPropagation not called on event', function () {\n\n      var instance = (new Component).initialize(document, {'divSelector': 'div', 'bodySelector': 'body'});\n      var spy1 = jasmine.createSpy();\n      var spy2 = jasmine.createSpy();\n\n      instance.on('click', {\n        'divSelector': function (event) {\n          spy1();\n        },\n        'bodySelector': function() {\n          spy2();\n        }\n      });\n\n      $('div').trigger('click');\n      expect(spy1).toHaveBeenCalled();\n      expect(spy2).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":272,"to":306}},"filePath":"test/spec/utils_spec.js","complexity":2,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["201",{"pageContent":"it('should not call handlers after stopPropagation called on event', function () {\n\n      var instance = (new Component).initialize(document, {'divSelector': 'div', 'bodySelector': 'body'});\n      var spy1 = jasmine.createSpy();\n      var spy2 = jasmine.createSpy();\n\n      instance.on('click', {\n        'divSelector': function (event) {\n          event.stopPropagation();\n          spy1();\n        },\n        'bodySelector': function() {\n          spy2();\n        }\n      });\n\n      $('div').trigger('click');\n      expect(spy1).toHaveBeenCalled();\n      expect(spy2).not.toHaveBeenCalled();\n    });\n  });\n\n  describe('countThen()', function () {\n    it('calls a wrapped function after n invocations', function () {\n      var spy = jasmine.createSpy();\n      var fn = utils.countThen(2, spy);\n      expect(spy).not.toHaveBeenCalled();\n      fn();\n      expect(spy).not.toHaveBeenCalled();\n      fn();\n      expect(spy).toHaveBeenCalled();\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":309,"to":340}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["202",{"pageContent":"it('calls a wrapped function only once', function () {\n      var spy = jasmine.createSpy();\n      var fn = utils.countThen(1, spy);\n      fn();\n      expect(spy.callCount).toBe(1);\n      fn();\n      expect(spy.callCount).toBe(1);\n    });\n  });\n\n  describe('once()', function () {\n    it('should only call a function once', function () {\n      var sum = 0;\n      var increment = utils.once(function () { sum++; });\n      increment();\n      increment();\n      expect(sum).toEqual(1);\n    });\n\n    it('should only call a recursive function once', function () {\n      var sum = 0;\n      var increment = utils.once(function () { sum++; increment(); });\n      increment();\n      expect(sum).toEqual(1);\n    });\n  });\n\n  describe('property locking', function() {\n    beforeEach(function () {\n      debug.enable(true);\n    });\n\n    afterEach(function() {\n      debug.enable(false);\n    });\n\n    describe('propertyWritability()', function() {","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":342,"to":378}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["203",{"pageContent":"describe('propertyWritability()', function() {\n\n      it('should allow a property to be write locked', function() {\n\n        var a = { lock: true };\n\n        utils.propertyWritability(a, 'lock', false);\n\n        expect(function() {\n          a.lock = false;\n        }).toThrow();\n\n        expect(a.lock).toBe(true);\n      });\n\n    });\n\n\n    describe('mutateProperty()', function() {\n      it('should allow mutations within the callback only', function() {\n\n        var a = { lock: true };\n\n        utils.propertyWritability(a, 'lock', false);\n\n        utils.mutateProperty(a, 'lock', function() {\n          a.lock = false;\n        });\n\n        expect(a.lock).toBe(false);\n\n      });\n    });\n  });\n\n  describe('getEnumerableProperty()', function() {\n    var obj;\n\n    beforeEach(function () {\n      obj = {\n        custom: 123\n      };\n    });","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":378,"to":420}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["204",{"pageContent":"beforeEach(function () {\n      obj = {\n        custom: 123\n      };\n    });\n\n    it('should return custom values', function() {\n      expect(utils.getEnumerableProperty(obj, 'custom')).toBe(123);\n    });\n    it('should not return native values', function() {\n      expect(utils.getEnumerableProperty(obj, 'toString')).toBe(undefined);\n    });\n    it('should return shadowed native values', function() {\n      obj.toString = function() {};\n      expect(typeof utils.getEnumerableProperty(obj, 'toString')).toBe('function');\n    });\n  });\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/spec/utils_spec.js","loc":{"lines":{"from":416,"to":433}},"filePath":"test/spec/utils_spec.js","complexity":1,"antiPatterns":[],"authors":["Andrew Lunny"]}}],["205",{"pageContent":"var tests = Object.keys(window.__karma__.files).filter(function (file) {\n  return (/_spec\\.js$/.test(file));\n});\n\nrequirejs.config({\n    // Karma serves files from '/base'\n    baseUrl: '/base',\n\n    // ask Require.js to load these files (all our tests)\n    deps: tests,\n\n    // start test run, once Require.js is done\n    callback: window.__karma__.start\n});","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/test/test-main.js","loc":{"lines":{"from":1,"to":14}},"filePath":"test/test-main.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}],["206",{"pageContent":"var BannerPlugin = require('webpack/lib/BannerPlugin');\nvar version = require('./package.json').version;\n\nmodule.exports = {\n  entry: './index',\n  output: {\n    path: __dirname + '/build',\n    filename: 'flight.js',\n    library: 'flight',\n    libraryTarget: 'umd',\n    sourcePrefix: ''\n  },\n  plugins: [\n    new BannerPlugin('Flight v' + version + ' | (c) Twitter, Inc. | MIT License')\n  ]\n};","metadata":{"source":"/Users/rupeshsingh/langChain/RepoScan/temp-repos/repo-1745227904299/webpack.config.js","loc":{"lines":{"from":1,"to":16}},"filePath":"webpack.config.js","complexity":1,"antiPatterns":["Use of var (instead of let/const)"],"authors":["Andrew Lunny"]}}]]